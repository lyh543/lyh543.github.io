(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{378:function(t,a,s){"use strict";s.r(a);var i=s(3),e=Object(i.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("推荐搭配 "),s("RouterLink",{attrs:{to:"/tags/面经集合/"}},[t._v("面试相关知识")]),t._v(" 食用。")],1),t._v(" "),s("p",[t._v("本来是准备留在创业公司的，结果疫情严重、经济下行，正好公司的业务是上海的线下娱乐（剧本杀）行业，短时间内不少投资人都撤资了，长时间的话也需要很长一段时间才能复苏。综合考虑，还是选择离职，回到大厂来。")]),t._v(" "),s("p",[t._v("由于校招有毕业时间限制，这个情况是没法走校招了。走三年以下经验岗位的社招也还行，就是 hc 没有校招那么集中就是了。")]),t._v(" "),s("h2",{attrs:{id:"博乐科技"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#博乐科技"}},[t._v("#")]),t._v(" 博乐科技")]),t._v(" "),s("h3",{attrs:{id:"笔试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#笔试题"}},[t._v("#")]),t._v(" 笔试题")]),t._v(" "),s("ol",[s("li",[t._v("给出计算个税的公式，计算个税。模拟即可。")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://leetcode.cn/problems/largest-rectangle-in-histogram/",target:"_blank",rel:"noopener noreferrer"}},[t._v("84. 柱状图中最大的矩形 - 力扣（LeetCode）"),s("OutboundLink")],1),t._v("。其实就是一个贪心题。")]),t._v(" "),s("li",[t._v("给定一个数组，要求从数组中选择一个子序列，满足子序列是"),s("a",{attrs:{href:"https://leetcode.cn/problems/decrease-elements-to-make-array-zigzag/",target:"_blank",rel:"noopener noreferrer"}},[t._v("锯齿数组"),s("OutboundLink")],1),t._v("，且子序列里相邻元素的差的绝对值之和 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("msubsup",[s("mo",[t._v("∑")]),s("mrow",[s("mi",[t._v("i")]),s("mo",[t._v("=")]),s("mn",[t._v("0")])],1),s("mrow",[s("mi",[t._v("l")]),s("mo",[t._v("−")]),s("mn",[t._v("2")])],1)],1),s("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")]),s("msub",[s("mi",[t._v("a")]),s("mi",[t._v("i")])],1),s("mo",[t._v("−")]),s("msub",[s("mi",[t._v("a")]),s("mrow",[s("mi",[t._v("i")]),s("mo",[t._v("+")]),s("mn",[t._v("1")])],1)],1),s("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\sum_{i=0}^{l-2}|a_i-a_{i+1}|")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1.2887179999999998em","vertical-align":"-0.29971000000000003em"}}),s("span",{staticClass:"mop"},[s("span",{staticClass:"mop op-symbol small-op",staticStyle:{position:"relative",top:"-0.0000050000000000050004em"}},[t._v("∑")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.9890079999999999em"}},[s("span",{staticStyle:{top:"-2.40029em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[s("span",{staticClass:"mord mathdefault mtight"},[t._v("i")]),s("span",{staticClass:"mrel mtight"},[t._v("=")]),s("span",{staticClass:"mord mtight"},[t._v("0")])])])]),s("span",{staticStyle:{top:"-3.2029em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[s("span",{staticClass:"mord mathdefault mtight",staticStyle:{"margin-right":"0.01968em"}},[t._v("l")]),s("span",{staticClass:"mbin mtight"},[t._v("−")]),s("span",{staticClass:"mord mtight"},[t._v("2")])])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.29971000000000003em"}},[s("span")])])])])]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.16666666666666666em"}}),s("span",{staticClass:"mord"},[t._v("∣")]),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathdefault"},[t._v("a")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.31166399999999994em"}},[s("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mathdefault mtight"},[t._v("i")])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[s("span")])])])])]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),s("span",{staticClass:"mbin"},[t._v("−")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),s("span",{staticClass:"mord"},[s("span",{staticClass:"mord mathdefault"},[t._v("a")]),s("span",{staticClass:"msupsub"},[s("span",{staticClass:"vlist-t vlist-t2"},[s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.311664em"}},[s("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),s("span",{staticClass:"sizing reset-size6 size3 mtight"},[s("span",{staticClass:"mord mtight"},[s("span",{staticClass:"mord mathdefault mtight"},[t._v("i")]),s("span",{staticClass:"mbin mtight"},[t._v("+")]),s("span",{staticClass:"mord mtight"},[t._v("1")])])])])]),s("span",{staticClass:"vlist-s"},[t._v("​")])]),s("span",{staticClass:"vlist-r"},[s("span",{staticClass:"vlist",staticStyle:{height:"0.208331em"}},[s("span")])])])])]),s("span",{staticClass:"mord"},[t._v("∣")])])])])]),t._v(" 最大。其实也是一个贪心题。")],1),t._v(" "),s("li",[t._v("以数组形式给出两个关于 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("x")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("x")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("x")])])])])]),t._v(" 的多项式的每一项的系数 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("a")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("a")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("a")])])])])]),t._v(" 和次数 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("n")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("n")])])])])]),t._v("，要求以相同的形式返回多项式的和的每一项的系数 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("a")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("a")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("a")])])])])]),t._v(" 和次数 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("n")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("n")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("n")])])])])]),t._v("，且不能调用系统的排序算法。其实就是要手写一个排序算法。")],1)]),t._v(" "),s("h3",{attrs:{id:"一面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一面"}},[t._v("#")]),t._v(" 一面")]),t._v(" "),s("p",[t._v("一面 23 分钟，问的很基础，这就是小公司吗 23333")]),t._v(" "),s("ol",[s("li",[t._v("自我介绍")]),t._v(" "),s("li",[t._v("聊一下项目和实习经历")]),t._v(" "),s("li",[t._v("对游戏服务器有了解吗？有什么特点？")]),t._v(" "),s("li",[t._v("平时用过哪些数据库？")]),t._v(" "),s("li",[t._v("对 Redis 有了解吗？（说用得不多，就没有深问了）")]),t._v(" "),s("li",[t._v("MySQL 索引的作用和副作用？（加速查、增；增的时候需要多写一个表）")]),t._v(" "),s("li",[t._v("数据库写入数据的过程（redolog、binlog 相关，不会）")]),t._v(" "),s("li",[t._v("TCP 三次握手与四次挥手的过程")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://leetcode.cn/problems/eight-queens-lcci/",target:"_blank",rel:"noopener noreferrer"}},[t._v("八皇后问题"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("反问")])]),t._v(" "),s("h3",{attrs:{id:"二面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二面"}},[t._v("#")]),t._v(" 二面")]),t._v(" "),s("p",[t._v("二面 33 分钟，主要就是算法题")]),t._v(" "),s("ol",[s("li",[t._v("自我介绍")]),t._v(" "),s("li",[t._v("平时有写博客吗？")]),t._v(" "),s("li",[t._v("平时有学习笔记吗？（和博客放一起的）")]),t._v(" "),s("li",[t._v("博客和学习笔记是上传到云端吗？")]),t._v(" "),s("li",[t._v("手写冒泡排序（包含对冒泡排序的优化，即每轮冒泡过程中只需要循环到上轮冒泡过程中最后调整顺序的位置即可）")]),t._v(" "),s("li",[t._v("反问")])]),t._v(" "),s("p",[t._v("面试官很和善，教冒泡和优化也教的很好（太久没写冒泡突然不会写了23333")]),t._v(" "),s("h3",{attrs:{id:"三面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三面"}},[t._v("#")]),t._v(" 三面")]),t._v(" "),s("p",[t._v("三面 1 个小时，大部分时间都是在写代码上，最近没写代码，真是太生疏了。")]),t._v(" "),s("ol",[s("li",[t._v("问实习经历和项目")]),t._v(" "),s("li",[t._v("找数组中的第二小的值")]),t._v(" "),s("li",[t._v("给定一个字符串，求字典序最大的子序列（搞了半天最后发现是单调栈）")])]),t._v(" "),s("h3",{attrs:{id:"hr-面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hr-面"}},[t._v("#")]),t._v(" HR 面")]),t._v(" "),s("p",[t._v("HR 面一个小时，微信电话，就是单纯的聊人生规划、聊大小厂选择、聊实习和项目中经历、如何学习、学到了什么等等。")]),t._v(" "),s("h2",{attrs:{id:"快手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快手"}},[t._v("#")]),t._v(" 快手")]),t._v(" "),s("h3",{attrs:{id:"一面-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一面-2"}},[t._v("#")]),t._v(" 一面")]),t._v(" "),s("ol",[s("li",[t._v("自我介绍")]),t._v(" "),s("li",[t._v("聊两段实习的经历")]),t._v(" "),s("li",[t._v("选个项目聊一下")]),t._v(" "),s("li",[t._v("项目里有什么难点（跨域）")]),t._v(" "),s("li",[t._v("（项目里提到 REST API）REST API 怎么使用的")]),t._v(" "),s("li",[t._v("GET 和 POST 有什么优缺点（GET 不能有 "),s("code",[t._v("request body")]),t._v("；GET 操作幂等，适合缓存）")]),t._v(" "),s("li",[t._v("一个 HTTP 报文有哪些字段")]),t._v(" "),s("li",[t._v("幂等是什么")]),t._v(" "),s("li",[t._v("“让金额增加十块”这个 API 应该怎么设计（使用不幂等的 POST 或 PATCH）")]),t._v(" "),s("li",[t._v("这个 API 的事务是 JVM 的事务还是数据库的事务（Spring Boot 的 "),s("code",[t._v("@Transaction")]),t._v(" 是数据库的事务）")]),t._v(" "),s("li",[t._v("事务会不会产生有锁")]),t._v(" "),s("li",[t._v("MySQL 有几种锁（共享锁、独占锁；表级的话还有共享意向锁和独占意向锁）")]),t._v(" "),s("li",[t._v("两个人同时更新，会不会有问题（如果在数据库里加则没有问题，即 "),s("code",[t._v("UPDATE table SET money = money + 10")]),t._v("；如果在后端里加的话需要在数据库 "),s("code",[t._v("SELECT FOR UPDATE")]),t._v(" 加锁）")]),t._v(" "),s("li",[t._v("索引是什么")]),t._v(" "),s("li",[t._v("聚簇索引和非聚簇索引是什么，有什么优缺点")]),t._v(" "),s("li",[t._v("MySQL 把主键作为聚簇索引有什么好处（插入快）")]),t._v(" "),s("li",[t._v("如果业务主键不是递增，怎么回避这个问题")]),t._v(" "),s("li",[t._v("B+ 树，还有哪些数据结构，B+ 树的优点（层数少，I/O 次数少）")]),t._v(" "),s("li",[t._v("选一个计网知识点介绍一下（选的 tcp / udp）")]),t._v(" "),s("li",[t._v("你的项目会迁移到 udp 吗？（如果有优点有缺点的话，需要权衡优缺点）")]),t._v(" "),s("li",[t._v("udp 业务场景有用吗？（在线会议等允许丢失的视频流）")]),t._v(" "),s("li",[t._v("udp 分包有什么用？（某一部分 ip 包丢失，导致整个 udp 包都会被丢掉。如果 udp 包太大，传输损失会很大）")]),t._v(" "),s("li",[t._v("tcp 的窗口是什么？")]),t._v(" "),s("li",[t._v("tcp 拥塞控制是什么？")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://leetcode.cn/problems/binary-tree-level-order-traversal/",target:"_blank",rel:"noopener noreferrer"}},[t._v("层序遍历"),s("OutboundLink")],1),t._v("（写完代码编译不过，面试官一起看也没发现问题，最后对着代码说了一下思路）")]),t._v(" "),s("li",[t._v("层序遍历复杂度是多少？两层循环看起来像是 "),s("code",[t._v("O(n^2)")]),t._v("，为什么是 "),s("code",[t._v("O(n)")])]),t._v(" "),s("li",[t._v("反问")])]),t._v(" "),s("p",[t._v("部门是快手核心部门。面试官的功底相当深厚，没有拿着八股文问，而是针对我的业务场景问数据库。人也很好（让我选哪些八股来问，我也得以跳过了 JVM 部分）。工作时间 10-10-5，核心部门的话也可以理解。")]),t._v(" "),s("h3",{attrs:{id:"二面-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二面-2"}},[t._v("#")]),t._v(" 二面")]),t._v(" "),s("ol",[s("li",[t._v("由于二面面试官看过一面的录像，就跳过自我介绍了，直接介绍项目")]),t._v(" "),s("li",[t._v("聊实习")]),t._v(" "),s("li",[t._v("第二段实习里面学到了什么？（学到了技术选型）")]),t._v(" "),s("li",[t._v("REST API 相较于其他前后端交互方式有什么好处（API 可读性高，只需要语言支持 HTTP Client，相较于 gRPC API 需要生成客户端代码更加方便）")]),t._v(" "),s("li",[t._v("REST API 和 gRPC 本质上有什么区别（感觉本质上其实都是差不多，客户端调用函数，服务端把调用接到某个函数上，业务逻辑运行完成后返回一个值）")]),t._v(" "),s("li",[t._v("Spring IoC 原理和具体的过程，解决了什么问题（循环依赖）")]),t._v(" "),s("li",[t._v("AOP 是做什么的")]),t._v(" "),s("li",[t._v("Redis 有用到吗？（没有，toB 的业务不太需要缓存）")]),t._v(" "),s("li",[t._v("（面试官可能看我啥八股都不会，开始聊对计算机的理解）广泛意义的缓存有什么用？（缓存用于加速一个慢的介质的读写）")]),t._v(" "),s("li",[t._v("什么时候会加缓存？（性价比高的时候会加缓存）")]),t._v(" "),s("li",[t._v("如果磁盘的速度达到了缓存的速度，那还需要缓存吗？（缓存的速度也会提高，"),s("a",{attrs:{href:"https://www.cnblogs.com/binarylei/p/12588928.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("存储器的金字塔模型"),s("OutboundLink")],1),t._v("是会一直存在的）")]),t._v(" "),s("li",[t._v("寄存器的速度怎么提高（这个太偏硬件了，不知道，面试官说时钟周期变短了，寄存器速度就提高了）")]),t._v(" "),s("li",[t._v("操作系统的内存管理（分页，记录页表，还利用 TLB 进行加速）")]),t._v(" "),s("li",[t._v("TLB 是怎么加速的（TLB 在 CPU 里，而且可以并行比较）")]),t._v(" "),s("li",[t._v("手写链表的快排")]),t._v(" "),s("li",[t._v("夸我的博客主题好看（有点开心）")]),t._v(" "),s("li",[t._v("看我博客写的东西都比较广，问平时在学哪方面的东西")])]),t._v(" "),s("p",[t._v("二面面试官也是很强，人也很好，看我 Java、Spring、AOP、Redis 的八股文都不太会，也不为难我，直接开始和我聊广泛意义的缓存，聊到如何加速寄存器、操作系统的页表和 TLB，总之就是在聊和开发不太相关的计算机的专业知识，以及谈对计算机的理解。")]),t._v(" "),s("h2",{attrs:{id:"tp-link-社招"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tp-link-社招"}},[t._v("#")]),t._v(" TP-LINK（社招）")]),t._v(" "),s("h3",{attrs:{id:"一面-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一面-3"}},[t._v("#")]),t._v(" 一面")]),t._v(" "),s("ol",[s("li",[t._v("自我介绍")]),t._v(" "),s("li",[t._v("问实习经历和项目")]),t._v(" "),s("li",[t._v("项目里有用到分布式吗？没有分布式的话，如何改造成分布式保证高可用？")]),t._v(" "),s("li",[t._v("选项目里的一个后端接口，聊聊如何实现的（选的是下单、支付这一块的）")]),t._v(" "),s("li",[t._v("平时用哪些语言开发")]),t._v(" "),s("li",[t._v("Spring IoC 原理（我不知道，面试官提示我用到了反射，于是说了一下我的理解）")]),t._v(" "),s("li",[t._v("动态代理类是什么")]),t._v(" "),s("li",[t._v("B+ 树和 B 树的区别？")]),t._v(" "),s("li",[t._v("为什么 B 树和 B+ 树叶子结点大小一样（因为磁盘按页存储、访问）")]),t._v(" "),s("li",[t._v("平时还有哪些方面了解的比较多（不过也没深入问）")]),t._v(" "),s("li",[t._v("反问（工作时长 8:30-18:00）")])]),t._v(" "),s("p",[t._v("一面半个小时，可能因为是社招，没有问算法题这一块。面试官人挺不错的，引导我回答 Spring IoC 原理。不过估计是挂了，毕竟社招门槛也高一些。")]),t._v(" "),s("h3",{attrs:{id:"二面-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二面-3"}},[t._v("#")]),t._v(" 二面")]),t._v(" "),s("p",[t._v("二面也是半个小时，主要是问实习和项目。问的很细。八股文是一点没问。")]),t._v(" "),s("p",[s("s",[t._v("原来 SSM 快过时了，现在分布式才是主流。")])]),t._v(" "),s("h2",{attrs:{id:"微软"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微软"}},[t._v("#")]),t._v(" 微软")]),t._v(" "),s("h3",{attrs:{id:"笔试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#笔试"}},[t._v("#")]),t._v(" 笔试")]),t._v(" "),s("p",[t._v("微软的笔试一直都挺硬核的，130 分钟 3 道题，我做了快两个小时。")]),t._v(" "),s("ol",[s("li",[t._v("给定总金额 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("B")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("B")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.05017em"}},[t._v("B")])])])])]),t._v(" 和一个只包含 "),s("code",[t._v("x")]),t._v(" 和 "),s("code",[t._v(".")]),t._v(" 的字符串表示一条路，其中每个 "),s("code",[t._v("x")]),t._v(" 表示路上有一个坑。除掉连续的 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("t")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("t")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.61508em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("t")])])])])]),t._v(" 个坑需要花费 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("t")]),s("mo",[t._v("+")]),s("mn",[t._v("1")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("t+1")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.69841em","vertical-align":"-0.08333em"}}),s("span",{staticClass:"mord mathdefault"},[t._v("t")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),s("span",{staticClass:"mbin"},[t._v("+")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.64444em","vertical-align":"0em"}}),s("span",{staticClass:"mord"},[t._v("1")])])])])]),t._v(" 块钱，求能除掉最多的坑数。字符串的长度和 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("B")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("B")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.05017em"}},[t._v("B")])])])])]),t._v(" 都在 "),s("code",[t._v("1000000")]),t._v(" 以内。贪心算法，优先除掉长的连续的坑即可。")],1),t._v(" "),s("li",[t._v("给定一个只包含 "),s("code",[t._v("W")]),t._v(" 和 "),s("code",[t._v("R")]),t._v(" 的字符串，可以通过一次操作交换两个相邻字符的位置，求将所有 "),s("code",[t._v("R")]),t._v(" 交换到一起需要的最少操作数。也是贪心，需要找到数量上最中间的 "),s("code",[t._v("R")]),t._v("（使得该 "),s("code",[t._v("R")]),t._v(" 左右两边的 "),s("code",[t._v("R")]),t._v(" 数量的差为 0 或 1），然后让所有 "),s("code",[t._v("R")]),t._v(" 靠近这个 "),s("code",[t._v("R")]),t._v("。")]),t._v(" "),s("li",[t._v("有 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("S")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("S")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.05764em"}},[t._v("S")])])])])]),t._v(" 个门诊室和 "),s("eq",[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mi",[t._v("N")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("N")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.10903em"}},[t._v("N")])])])])]),t._v(" 个患者，每个患者只会去其指定编号的两个门诊室中的一个。需要判断是否存在方案满足所有患者需求，同时使得每个门诊只有一个患者，只需返回 "),s("code",[t._v("true")]),t._v(" 或 "),s("code",[t._v("false")]),t._v("。是个图论题（门诊室是点，患者是边），我的做法是借助 dfs 对每个连通图中的边和点进行计数，如果存在某个连通图的边数大于点数，则不存在方案。")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);