(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{405:function(t,e,a){"use strict";a.r(e);var r=a(3),s=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("blockquote",[e("p",[t._v("2019.10.29 更新：由于 Gitalk 对 GitHub 之外的网站支持不好（在 "),e("code",[t._v("github.io")]),t._v(" 以外的域名下都不能进行评论），现已迁移至 Valine。\nValine 的博客推送做的不是很好，不过有第三方实现方案。可查阅 "),e("a",{attrs:{href:"https://valine.js.org/notify.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方网站"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[t._v("2019.11.6 更新：由于 GitHub OAuth API 限制，只能有一个回调网页"),e("code",[t._v("Authorization callback URL")]),t._v("，但是没有限制为 "),e("code",[t._v("github.io")]),t._v("。可在 https://github.com/settings/developers 对应的地方修改。Gitalk 真香。邮件是由 GitHub 发的，稳定性比自己邮箱发会稳定得多。")])]),t._v(" "),e("p",[t._v("阅读 "),e("a",{attrs:{href:"https://github.com/viosey/hexo-theme-material/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Material 主题"),e("OutboundLink")],1),t._v(" 的主题配置文件以后，可以发现，Material 主题的配置文件是自带了评论区的功能，但是给的几个网站都不是很好用。（disqus国内用不了，changyan需要备案，gitment作者"),e("s",[t._v("删库跑路了")]),t._v("停更并把服务器关了）。")]),t._v(" "),e("h2",{attrs:{id:"安装步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装步骤"}},[t._v("#")]),t._v(" 安装步骤")]),t._v(" "),e("p",[t._v("在 Material 的 github 网站的 issue 下找到了关于新增 "),e("a",{attrs:{href:"https://github.com/gitalk/gitalk/blob/master/readme-cn.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("gitalk"),e("OutboundLink")],1),t._v(" 的 pull request。")]),t._v(" "),e("p",[t._v("所以按照 "),e("a",{attrs:{href:"https://github.com/viosey/hexo-theme-material/pull/554/files",target:"_blank",rel:"noopener noreferrer"}},[t._v("pull request"),e("OutboundLink")],1),t._v(" 修改、添加对应的文件就可以了。")]),t._v(" "),e("p",[t._v("注意在本地不应该修改"),e("code",[t._v("_config.template.yml")]),t._v("，而应该直接修改主题配置文件"),e("code",[t._v("_config.yml")]),t._v("。其他 Hexo 主题的添加方式同理。")]),t._v(" "),e("p",[t._v("其中"),e("code",[t._v("_config.yml")]),t._v("的内容需要到 "),e("a",{attrs:{href:"https://github.com/settings/applications/new",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github New OAuth Application"),e("OutboundLink")],1),t._v("注册申请。"),e("br"),t._v("\n申请需要填的东西有：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("标题")]),t._v(" "),e("th",[t._v("内容")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Application name")]),t._v(" "),e("td",[t._v("随便写，建议填你的网站名"),e("code",[t._v("<username>.github.io")])])]),t._v(" "),e("tr",[e("td",[t._v("Homepage URL")]),t._v(" "),e("td",[t._v("博客域名"),e("code",[t._v("https://<username>.github.io/")])])]),t._v(" "),e("tr",[e("td",[t._v("Application description")]),t._v(" "),e("td",[t._v("随意，可不填")])]),t._v(" "),e("tr",[e("td",[t._v("Authorization callback URL")]),t._v(" "),e("td",[t._v("博客域名"),e("code",[t._v("https://<username>.github.io/")])])])])]),t._v(" "),e("p",[t._v("register 以后会得到一个"),e("code",[t._v("Client ID")]),t._v("和"),e("code",[t._v("Client Secret")]),t._v("。需要分别填进主题配置文件。")]),t._v(" "),e("p",[e("code",[t._v("主题配置文件")]),t._v("需要作如下修改：")]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("comment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("use")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gitalk\n\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gitment_client_secret")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("valine_leancloud_appId")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("valine_leancloud_appKey")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gitalk_owner")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你的github用户名，如lyh543")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gitalk_repo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你的github仓库名，如lyh543.github.io")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gitalk_client_id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 刚才获取的 Client ID")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gitalk_client_secret")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 刚才获取的 Client secret")]),t._v("\n")])])]),e("h2",{attrs:{id:"lable-过长的-bug"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lable-过长的-bug"}},[t._v("#")]),t._v(" lable 过长的 bug")]),t._v(" "),e("p",[t._v("配置好并 "),e("code",[t._v("hexo d -g")]),t._v(" 以后，打开一篇文章，发现“未找到相关的 issues 进行评论”。"),e("br"),t._v("\n使用 Github 登录以后，就会显示 "),e("code",[t._v("Error: Validation Failed")]),t._v("。")]),t._v(" "),e("p",[t._v("去 Gitalk 的 Issues 下还真找到了这个 "),e("a",{attrs:{href:"https://github.com/gitalk/gitalk/issues/102",target:"_blank",rel:"noopener noreferrer"}},[t._v("Issue"),e("OutboundLink")],1),t._v(", 还是被置顶了的。")]),t._v(" "),e("p",[t._v("看样子 bug 是因为 Gitalk 是默认用文章标题作 issue 的 "),e("code",[t._v("lable")]),t._v("，并以此作为该评论区的唯一识别码。"),e("br"),t._v("\nGithub 限制了 issue 的 "),e("code",[t._v("lable")]),t._v(" 长度不超过 50，如果使用中文，在链接中一个中文等于三个字符，导致 "),e("code",[t._v("label")]),t._v(" 过长，无法正常生成评论。")]),t._v(" "),e("p",[t._v("该 Issues 下有一条评论给出了"),e("a",{attrs:{href:"https://github.com/gitalk/gitalk/issues/102#issuecomment-364930067",target:"_blank",rel:"noopener noreferrer"}},[t._v("一个方案"),e("OutboundLink")],1),t._v("，使用标题的 Hash 值的前 50 位作为 "),e("code",[t._v("label")]),t._v("。")]),t._v(" "),e("p",[t._v("我尝试以后发现仍然不行，不懂 JavaScript 的我猜测是 JavaScript 的函数名引用错了。"),e("br"),t._v("\n经 Google 以后，找到了一个"),e("a",{attrs:{href:"https://github.com/viosey/hexo-theme-material/issues/622#issuecomment-373307046",target:"_blank",rel:"noopener noreferrer"}},[t._v("可用的 JavaScript"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"无法自动为博客初始化-issue-的-bug"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#无法自动为博客初始化-issue-的-bug"}},[t._v("#")]),t._v(" 无法自动为博客初始化 issue 的 bug")]),t._v(" "),e("p",[t._v("还有一个问题，他不会为每一篇博客自动生成 issue，也就是初始化评论。")]),t._v(" "),e("p",[t._v("解决方案有不少，但是感觉挺麻烦的，做的话有点力不从心。在这里抛几个链接吧：")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/gitalk/gitalk/wiki/%E8%AF%84%E8%AE%BA%E5%88%9D%E5%A7%8B%E5%8C%96",target:"_blank",rel:"noopener noreferrer"}},[t._v("（"),e("code",[t._v("ruby")]),t._v("脚本，Gitalk 官方）评论初始化"),e("OutboundLink")],1),e("br"),t._v(" "),e("a",{attrs:{href:"http://edisonxu.com/2018/10/31/gitalk-auto-init.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("（"),e("code",[t._v("Nodejs")]),t._v("）自动初始化Gitalk评论"),e("OutboundLink")],1),e("br"),t._v(" "),e("a",{attrs:{href:"https://draveness.me/git-comments-initialize",target:"_blank",rel:"noopener noreferrer"}},[t._v("（"),e("code",[t._v("ruby")]),t._v("脚本）自动初始化 Gitalk 和 Gitment 评论"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("大概就这样结帖了。")])])}),[],!1,null,null,null);e.default=s.exports}}]);