(window.webpackJsonp=window.webpackJsonp||[]).push([[236],{652:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("最先接触到异步的，应该是前端，比如 JavaScript，连 Sleep 和 XMLHttpRequest 都是用异步的 Promise 写的。")]),t._v(" "),a("p",[t._v("而这次我正在做的 Web 后端也得用到异步，因为这个后端用到了 Onedrive REST API，每次向 Onedrive 请求需要约 1s，如果不使用异步，这个线程就会卡 1s。如果出现高并发（如图片请求），延时也会成倍的增加。")]),t._v(" "),a("p",[t._v("关于协程，还是推荐看 "),a("a",{attrs:{href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("协程和任务 - Python 3.9.5 文档"),a("OutboundLink")],1),t._v("，了解其原理。至于下面的东西，只是一些语法糖的记录。")]),t._v(" "),a("h2",{attrs:{id:"异步和同步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步和同步"}},[t._v("#")]),t._v(" 异步和同步")]),t._v(" "),a("p",[t._v("从语法上，同步函数和异步函数的区别只是一个 "),a("code",[t._v("async")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" time "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sleep\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync_double")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("async_double")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),a("h2",{attrs:{id:"调用异步函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用异步函数"}},[t._v("#")]),t._v(" 调用异步函数")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("协程")]),t._v(" 可用来表示两个紧密关联的概念:")]),t._v(" "),a("ol",[a("li",[t._v("协程函数: 定义形式为 "),a("code",[t._v("async def")]),t._v(" 的函数;")]),t._v(" "),a("li",[t._v("协程对象: 调用 "),a("code",[t._v("协程函数")]),t._v(" 所返回的对象。")])])]),t._v(" "),a("p",[t._v("由上可见，调用异步函数（或者说，协程函数）并不是执行函数，而是生成了一个协程对象。")]),t._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[t._v("coro "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" async_double"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ncoro\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <coroutine object async_double at 0x000002779EC830C0>")]),t._v("\n")])])]),a("p",[t._v("在同步函数中调用异步函数，使用 "),a("code",[t._v("asyncio.run()")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" asyncio\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" asyncio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("async_double"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# result = 6")]),t._v("\n")])])]),a("p",[t._v("在异步函数中调用异步函数并等待其执行完成（就像是同步函数一样），使用 "),a("code",[t._v("await")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[t._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" async_double"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# result = 6")]),t._v("\n")])])]),a("p",[t._v("请注意，同步函数是不能使用 "),a("code",[t._v("await")]),t._v(" 关键字的，不然会报 "),a("code",[t._v("SyntaxError")]),t._v("。")])])}),[],!1,null,null,null);s.default=e.exports}}]);