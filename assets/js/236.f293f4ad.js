(window.webpackJsonp=window.webpackJsonp||[]).push([[236],{638:function(a,t,e){"use strict";e.r(t);var n=e(3),o=Object(n.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p",[a._v("诚然，在 Linux 上使用 Anaconda、Jupyter Notebook 的体验远远高于 Windows，但我由于自身因素，只能在台式机上使用 Windows 系统，而微软的 wsl 暂时还不能连接到显卡，后期如果要考虑用 Python 进行深度学习方面的学习，不能使用显卡加速是一个很麻烦的地方。")]),a._v(" "),e("p",[a._v("综上，我想要尝试在 Windows 上安装 Anaconda 和 Jupyter Notebook。")]),a._v(" "),e("h2",{attrs:{id:"anaconda-简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#anaconda-简介"}},[a._v("#")]),a._v(" Anaconda 简介")]),a._v(" "),e("blockquote",[e("p",[a._v("摘抄自：https://blog.csdn.net/ITLearnHall/article/details/81708148")])]),a._v(" "),e("p",[a._v("Anaconda 指的是一个开源的 Python 发行版本，其包含了 conda、Python 等 180 多个科学包及其依赖项。")]),a._v(" "),e("p",[a._v("因为包含了大量的科学包，Anaconda 的下载文件比较大（约 531 MB），如果只需要某些包，或者需要节省带宽或存储空间，也可以使用 Miniconda 这个较小的发行版（仅包含 conda 和 Python）。")]),a._v(" "),e("p",[a._v("Conda 是一个开源的包、环境管理器（类似于 Debian 的 apt，Python 的 pip？），可以用于在同一个机器上安装不同版本的软件包及其依赖，并能够在不同的环境之间切换")]),a._v(" "),e("p",[a._v("Anaconda 包括 Conda、Python 以及一大堆安装好的工具包，比如：numpy、pandas 等")]),a._v(" "),e("p",[a._v("Miniconda 包括 Conda、Python")]),a._v(" "),e("h2",{attrs:{id:"anaconda-安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#anaconda-安装"}},[a._v("#")]),a._v(" Anaconda 安装")]),a._v(" "),e("p",[a._v("直接丢链接吧：https://blog.csdn.net/ITLearnHall/article/details/81708148 （还是上面那个）")]),a._v(" "),e("p",[a._v("包括安装、添加环境变量及其他常见使用方法。")]),a._v(" "),e("h3",{attrs:{id:"anaconda-windows-环境变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#anaconda-windows-环境变量"}},[a._v("#")]),a._v(" Anaconda Windows 环境变量")]),a._v(" "),e("p",[a._v("为方便使用，我个人添加了一些其他的 "),e("code",[a._v("PATH")]),a._v(" 环境变量（添加 "),e("code",[a._v("PATH")]),a._v(" 环境变量的方式请自行百度）。如下：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("C:\\Program Files\\Anaconda\\\nC:\\Program Files\\Anaconda\\Scripts\nC:\\Program Files\\Anaconda\\condabin\nC:\\Program Files\\Anaconda\\Library\\bin\n")])])]),e("h2",{attrs:{id:"conda-包管理命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conda-包管理命令"}},[a._v("#")]),a._v(" conda 包管理命令")]),a._v(" "),e("p",[a._v("列举已安装的包："),e("code",[a._v("conda list")])]),a._v(" "),e("p",[a._v("安装 "),e("code",[a._v("requests")]),a._v(" 包（以下命令二选一）：")]),a._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[a._v("conda install requests\npip install requests\n")])])]),e("p",[a._v("卸载：")]),a._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[a._v("conda uninstall requests\npip uninstall requests\n")])])]),e("p",[a._v("更新：")]),a._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[a._v("conda upgrade "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("all")]),a._v("\n")])])]),e("h2",{attrs:{id:"配置-jupyter-notebook"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置-jupyter-notebook"}},[a._v("#")]),a._v(" 配置 Jupyter Notebook")]),a._v(" "),e("p",[a._v("安装完 Anaconda 以后，就自带了 Jupyter Notebook。双击或者运行 "),e("code",[a._v("jupyter notebook")]),a._v(" 就可以用了。")]),a._v(" "),e("p",[a._v("配置方面，可以先运行 "),e("code",[a._v("jupyter notebook --generate-config")]),a._v(" 生成默认配置，路径在 "),e("code",[a._v("~/.jupyter/jupyter_notebook_config.py")]),a._v(" 或 "),e("code",[a._v("%userprofile%/.jupyter/jupyter_notebook_config.py")]),a._v("（Windows）。")]),a._v(" "),e("p",[a._v("如果想要支持在公网访问 Jupyter Notebook，需要关注文件里的以下配置：")]),a._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## The IP address the notebook server will listen on.")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  Default: 'localhost'")]),a._v("\nc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("NotebookApp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ip "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*'")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## Whether to open in a browser after starting. The specific browser used is")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  platform dependent and determined by the python standard library `webbrowser`")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  module, unless it is overridden using the --browser (NotebookApp.browser)")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  configuration option.")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  Default: True")]),a._v("\nc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("NotebookApp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("open_browser "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("False")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## The base URL for the notebook server.")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  ")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  Leading and trailing slashes can be omitted, and will automatically be added.")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  Default: '/'")]),a._v("\nc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("NotebookApp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("base_url "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/nb/'")]),a._v("\n")])])]),e("h2",{attrs:{id:"jupyter-notebook-支持-c-、matlab、mathematica"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jupyter-notebook-支持-c-、matlab、mathematica"}},[a._v("#")]),a._v(" Jupyter Notebook 支持 C++、MATLAB、Mathematica")]),a._v(" "),e("p",[a._v("Jupyter Notebook 对 Linux 和 Mac 平台支持很好，可以在上面使用 C++、MATLAB、Mathematica，只要安装了对应内核就行。然而现在这些还不支持 Windows。目前全平台支持 Python。")]),a._v(" "),e("h2",{attrs:{id:"部分报错及解决办法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部分报错及解决办法"}},[a._v("#")]),a._v(" 部分报错及解决办法")]),a._v(" "),e("h3",{attrs:{id:"conda-list-报错-conda-不是可运行的程序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conda-list-报错-conda-不是可运行的程序"}},[a._v("#")]),a._v(" conda list 报错 conda 不是可运行的程序")]),a._v(" "),e("p",[a._v("将 Anaconda 安装目录的 "),e("code",[a._v("Anaconda3\\Scripts")]),a._v(" 文件夹加入  "),e("code",[a._v("PATH")]),a._v(" 环境变量。参考"),e("a",{attrs:{href:"https://blog.csdn.net/qq_42273575/article/details/83345455",target:"_blank",rel:"noopener noreferrer"}},[a._v("conda list 报错"),e("OutboundLink")],1)]),a._v(" "),e("h3",{attrs:{id:"conda-list-报错-loadlibrary"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conda-list-报错-loadlibrary"}},[a._v("#")]),a._v(" conda list 报错 LoadLibrary() ...")]),a._v(" "),e("p",[a._v("错误提示 "),e("code",[a._v("TypeError LoadLibrary() argument 1 must be str, not None")]),a._v("。")]),a._v(" "),e("p",[a._v("不是很清楚具体的原因，倒是找到了三篇 CSDN 博客解决这个的问题：")]),a._v(" "),e("ul",[e("li",[a._v("环境变量和（单独安装的） Python 的 Scripts 冲突？—— 将 Anaconda 的 "),e("code",[a._v("PATH")]),a._v(" 置顶（或者考虑直接将单独安装的 Python 卸载）。"),e("a",{attrs:{href:"https://blog.csdn.net/Noxi_lumors/article/details/99207714",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考链接"),e("OutboundLink")],1)]),a._v(" "),e("li",[a._v("将 "),e("code",[a._v("Anaconda3\\condabin")]),a._v(" 文件夹加入  "),e("code",[a._v("PATH")]),a._v(" 环境变量。"),e("a",{attrs:{href:"https://blog.csdn.net/taoqick/article/details/99415975",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考链接"),e("OutboundLink")],1)]),a._v(" "),e("li",[a._v("每次使用 "),e("code",[a._v("conda.bat activate")]),a._v(" 进入 Anaconda 环境；或者 "),e("code",[a._v("conda init bash")]),a._v(" 激活基础环境。"),e("a",{attrs:{href:"https://blog.csdn.net/AI414010/article/details/100011008",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考链接"),e("OutboundLink")],1)])]),a._v(" "),e("p",[a._v("最后都没好，但重启以后就好了，"),e("s",[a._v("到底哪一条是对的，我也不知道")])]),a._v(" "),e("h3",{attrs:{id:"conda-upgrade-报错-ssl-is-not-available"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conda-upgrade-报错-ssl-is-not-available"}},[a._v("#")]),a._v(" conda upgrade 报错 SSL is not available")]),a._v(" "),e("p",[a._v("具体报错是 "),e("code",[a._v("Can't connect to HTTPS URL because the SSL module is not available")]),a._v("。"),e("br"),a._v("\n更有意思的是，在 Anaconda Prompt 命令行中不会报错，而在 cmd 中 "),e("code",[a._v("conda install")]),a._v(" 就会报错。")]),a._v(" "),e("ul",[e("li",[a._v("解决办法一：将默认源换为清华的镜像源，并将 "),e("code",[a._v("https")]),a._v(" 改为 "),e("code",[a._v("http")]),a._v("。（"),e("a",{attrs:{href:"https://blog.csdn.net/sinat_29315697/article/details/80516498",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考链接"),e("OutboundLink")],1),a._v("，不推荐）")]),a._v(" "),e("li",[a._v("解决办法二：将 "),e("code",[a._v("\\Anaconda3\\Library\\bin")]),a._v(" 包含进 "),e("code",[a._v("PATH")]),a._v(" 环境变量。（亲测有效）")]),a._v(" "),e("li",[a._v("解决办法三（没有试过）：安装 OpenSSL。"),e("a",{attrs:{href:"https://github.com/conda/conda/issues/8046#issuecomment-450492945",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考链接"),e("OutboundLink")],1)])]),a._v(" "),e("h3",{attrs:{id:"conda-upgrade-报错-environmentnotwritableerror"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conda-upgrade-报错-environmentnotwritableerror"}},[a._v("#")]),a._v(" conda upgrade 报错 EnvironmentNotWritableError")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("EnvironmentNotWritableError: The current user does not have write permissions to the target environment.\n")])])]),e("p",[a._v("使用管理员权限运行命令行窗口即可。")])])}),[],!1,null,null,null);t.default=o.exports}}]);