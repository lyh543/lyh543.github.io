(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{570:function(s,a,t){"use strict";t.r(a);var e=t(3),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("入坑 Linux 以后，命令行也是一个非常重要的工具。本文简单总结一下常用的 bash 语法。")]),s._v(" "),t("p",[s._v("这里只讲纯语法，文件操作、系统工具等可以看 "),t("a",{attrs:{href:"../linux-daily-command"}},[s._v("Linux 日常")]),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"cheatsheet"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cheatsheet"}},[s._v("#")]),s._v(" cheatsheet")]),s._v(" "),t("ul",[t("li",[s._v("变量赋值 "),t("code",[s._v("=")]),s._v(" 左右不能有空格")]),s._v(" "),t("li",[t("code",[s._v("if")]),s._v(" "),t("code",[s._v("=")]),s._v(" 左右都要有空格")]),s._v(" "),t("li",[t("code",[s._v("var=$s")]),s._v(" 等价于 "),t("code",[s._v("var=${s}")])]),s._v(" "),t("li",[t("code",[s._v("var=$(echo 123)")]),s._v(" 等价于 "),t("code",[s._v("var=$`echo 123`")])]),s._v(" "),t("li",[s._v("多条语句串行执行："),t("code",[s._v("echo 1; sleep 1; echo 2")])]),s._v(" "),t("li",[s._v("多条语句并行执行："),t("code",[s._v("echo 1 & echo 2")])]),s._v(" "),t("li",[s._v("多条语句等待前一句正确执行后执行："),t("code",[s._v("echo 1 && echo 2")])]),s._v(" "),t("li",[s._v("命令行末加 "),t("code",[s._v("\\")]),s._v(" 可使得命令跨行")]),s._v(" "),t("li",[s._v("for："),t("code",[s._v("for ((i=1; i<=10; i ++)); do echo $i; done")])]),s._v(" "),t("li",[s._v("或者："),t("code",[s._v("for i in {1..10}; do echo $i; done")])])]),s._v(" "),t("h2",{attrs:{id:"变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[s._v("#")]),s._v(" 变量")]),s._v(" "),t("p",[s._v("对变量名的要求和 C/C++ 相同。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("\n")])])]),t("p",[s._v("注意等号左右都不能有空格。左边有空格，"),t("code",[s._v("var")]),s._v(" 会被视为命令；右边有空格，"),t("code",[s._v("123")]),s._v(" 会被视为命令。"),t("br"),s._v("\n（而 bash 的 "),t("code",[s._v("if")]),s._v(" 则强制要求等号左右必须有空格）")]),s._v(" "),t("p",[s._v("若赋值有空格，可以使用引号括起来，赋值的结果没有引号。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123 456"')]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),s._v("\n")])])]),t("p",[s._v("在变量名前加 "),t("code",[s._v("$")]),s._v(" 即可。也可以把变量名用大括号括起来。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${var}")]),s._v("\n")])])]),t("p",[s._v("值得注意的是，也可以把命令执行的结果看作是一个取值的过程，如下：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" the current "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" is "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" +%c"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),t("p",[s._v("后者支持嵌套。")]),s._v(" "),t("h2",{attrs:{id:"输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输出"}},[s._v("#")]),s._v(" 输出")]),s._v(" "),t("p",[t("code",[s._v("echo")]),s._v(" 使用较简单。")]),s._v(" "),t("p",[s._v("需要看 "),t("code",[s._v("echo")]),s._v(" 的帮助请使用 "),t("code",[s._v("man echo")]),s._v(" 而不是一般的 "),t("code",[s._v("echo --help")]),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"一行一语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一行一语句"}},[s._v("#")]),s._v(" 一行一语句？")]),s._v(" "),t("p",[s._v("bash 默认是一行一条命令。但是某些特殊符号可以打破这个规定：")]),s._v(" "),t("ol",[t("li",[t("code",[s._v(";")]),s._v(" 使得一行多个命令。和一般情况相同的是，命令是串行执行：")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("输出 1，停顿一秒，然后输出 2。")]),s._v(" "),t("hr"),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("code",[s._v("&")]),s._v(" 使得一行多个命令。和一般情况相同的是，命令是并行执行：")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])])]),t("p",[s._v("这里的 "),t("code",[s._v("echo 2")]),s._v(" 和 "),t("code",[s._v("sleep 1")]),s._v(" 同时执行，所以用户并不会感觉输出 "),t("code",[s._v("1")]),s._v(" 和 "),t("code",[s._v("2")]),s._v(" 间出现了停顿。")]),s._v(" "),t("p",[s._v("bash 的具体实现是，会创建一个新进程执行 "),t("code",[s._v("&")]),s._v(" 前的代码（同时会将新进程的 "),t("code",[s._v("pid")]),s._v(" 显示在屏幕上如 "),t("code",[s._v("[1] 174")]),s._v("），然后主进程继续执行这行之后的代码。")]),s._v(" "),t("p",[s._v("顺便，这里的 "),t("code",[s._v("&")]),s._v(" 配合 "),t("code",[s._v("for")]),s._v(" 可以实现并行 for 语句。nb！")]),s._v(" "),t("hr"),s._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[t("code",[s._v("&&")]),s._v(" 使得一行多个命令。但是，只有前面的命令没有出错，才会执行后面的命令。（显然命令需要串行执行）：")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" localhost -c "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ping 成功执行，然后输出 2")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" whatthefuck -c "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ping 失败，不输出 2")]),s._v("\n")])])]),t("ol",{attrs:{start:"4"}},[t("li",[t("code",[s._v("\\")]),s._v(" 使得多行一个命令。常用于参数较多时，将命令参数分行写。")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("ffmpeg "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -allowed_extensions ALL "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -hwaccel cuda -i "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("117652")]),s._v("-8.m3u8 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -c:v h264_nvenc "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(".mp4\n")])])]),t("h2",{attrs:{id:"流程控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#流程控制"}},[s._v("#")]),s._v(" 流程控制")]),s._v(" "),t("h3",{attrs:{id:"条件判断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#条件判断"}},[s._v("#")]),s._v(" 条件判断")]),s._v(" "),t("h3",{attrs:{id:"循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#循环"}},[s._v("#")]),s._v(" 循环")]),s._v(" "),t("p",[s._v("有个 C 语言风格的：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("p",[s._v("写成一行的版本：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("hr"),s._v(" "),t("p",[s._v("除此之外，还有：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示 1 至 10")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("p",[s._v("同样可以写为单行的版本：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);