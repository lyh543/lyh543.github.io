(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{653:function(t,s,n){"use strict";n.r(s);var a=n(3),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"系列目录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#系列目录"}},[t._v("#")]),t._v(" 系列目录")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"./1-transactions"}},[t._v("数据库并发控制 (1) -- 事务")])]),t._v(" "),n("li",[n("a",{attrs:{href:"./2-innodb-mvcc"}},[t._v("数据库并发控制 (2) -- InnoDB 并发控制")])]),t._v(" "),n("li",[n("a",{attrs:{href:"./3-innodb-locks"}},[t._v("数据库并发控制 (3) -- InnoDB 锁")])]),t._v(" "),n("li",[n("a",{attrs:{href:"./4-distributed-locks-design"}},[t._v("数据库并发控制 (4) -- 分布式锁的设计")])])]),t._v(" "),n("h2",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"http://mysql.taobao.org/monthly/2017/12/01/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL · 引擎特性 · InnoDB 事务系统 - 淘宝数据库内核月报"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"http://mysql.taobao.org/monthly/2015/04/01/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL · 引擎特性 · InnoDB undo log 漫游 - 淘宝数据库内核月报"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"http://mysql.taobao.org/monthly/2018/03/01/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL · 源码分析 · InnoDB的read view，回滚段和purge过程简介 - 淘宝数据库内核月报"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://blog.csdn.net/waltonhuang/article/details/105850745",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mysql MVCC 原理 low_limit_id ReadView_ stevewong的专栏-CSDN博客"),n("OutboundLink")],1)])]),t._v(" "),n("h2",{attrs:{id:"并发控制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#并发控制"}},[t._v("#")]),t._v(" 并发控制")]),t._v(" "),n("ul",[n("li",[t._v("并发控制 (Concurrency Control, CC)")])]),t._v(" "),n("p",[t._v("数据库管理系统（DBMS）中的并发控制的任务是确保在多个事务"),n("strong",[t._v("同时")]),t._v("访问数据库中同一数据时不破坏"),n("strong",[t._v("ACID")]),t._v("。")]),t._v(" "),n("p",[t._v("并发控制里，最重要的大前提就是保证统一性。不管底层怎么折腾、不管使用什么高端技术，前提就是保证 ACID。只有在保证 ACID 的前提下，我们才能讨论利用什么方法提升数据库性能。")]),t._v(" "),n("p",[t._v("并发控制方法的分类众说纷纭，我个人倾向于分为 Lock-Based Concurrency Control (LBCC) 和 Multiversion Concurreny Control (MVCC) 两类。基于锁的并发控制比较好理解，读/写的时候加上锁，来防止其他事务访问。很清晰简洁的方案，但是并发度很低。MVCC 就利用保存多个版本，替代了数据库锁。")]),t._v(" "),n("h2",{attrs:{id:"mysql-多版本并发控制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mysql-多版本并发控制"}},[t._v("#")]),t._v(" MySQL 多版本并发控制")]),t._v(" "),n("ul",[n("li",[t._v("多版本并发控制（Multiversion CC, MVCC）")])]),t._v(" "),n("p",[t._v("多版本并发控制通过保存一条记录的多个副本，替代了数据库锁，使得读写和写读可以并发。")]),t._v(" "),n("p",[t._v("InnoDB是在undolog中实现的，通过undolog可以找回数据的历史版本。找回的数据历史版本可以提供给用户读(按照隔离级别的定义，有些读请求只能看到比较老的数据版本)，也可以在回滚的时候覆盖数据页上的数据。在InnoDB内部中，会记录一个全局的活跃读写事务数组，其主要用来判断事务的可见性。")]),t._v(" "),n("p",[t._v("对于用户删除的数据，InnoDB并不是立刻删除，而是标记一下，后台线程批量的真正删除。类似的还有InnoDB的二级索引的更新操作，不是直接对索引进行更新，而是标记一下，然后产生一条新的。这个线程就是后台的Purge线程。此外，过期的undolog也需要回收，这里说的过期，指的是undo不需要被用来构建之前的版本，也不需要用来回滚事务。")]),t._v(" "),n("h2",{attrs:{id:"undo-log-以及对原表的修改"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#undo-log-以及对原表的修改"}},[t._v("#")]),t._v(" undo log 以及对原表的修改")]),t._v(" "),n("h2",{attrs:{id:"readview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#readview"}},[t._v("#")]),t._v(" ReadView")]),t._v(" "),n("ul",[n("li",[t._v("定义：每个事务持有一个 ReadView，表示本 ReadView（或者说本事务）能看到哪些事务写的记录")]),t._v(" "),n("li",[t._v("创建时机：可重复读 (RR) 隔离级别下，在事务的第一次读时创建；读提交（RC）隔离级别下，每次读时创建。这是 RR 和 RC 在实现上的唯一不同")]),t._v(" "),n("li",[t._v("ReadView 创建后不会再变动。")])]),t._v(" "),n("hr"),t._v(" "),n("ul",[n("li",[t._v("问：一个事务能看到哪些事务写的记录 ——答：自己和在创建 ReadView 时"),n("strong",[t._v("已经提交")]),t._v("了的事务")]),t._v(" "),n("li",[t._v("最简单的实现：将所有已提交的事务 id 记录到一个数组 "),n("code",[t._v("m_ids")]),t._v(" 中（问题是已提交的事务太多）")]),t._v(" "),n("li",[n("strong",[t._v("优化")]),t._v("：大于某个值的肯定都是没提交的，小于某个值的肯定都是提交了的，数组只需要记录中间范围内已提交的事务\n"),n("ul",[n("li",[t._v("上界 "),n("code",[t._v("m_low_limit_id")]),t._v("：设为"),n("strong",[t._v("此时还没分配的 id")]),t._v("，大于等于该值的一定未提交")]),t._v(" "),n("li",[t._v("下界 "),n("code",[t._v("m_up_limit_id")]),t._v("：设为"),n("strong",[t._v("未提交事务的最小 id")]),t._v("，小于该值的一定已提交")])])]),t._v(" "),n("li",[t._v("小优化：从记录已经提交的事务，改为记录未提交的事务（未提交的事务数会少很多）\n"),n("ul",[n("li",[t._v("未提交的事务又叫活跃事务")])])])]),t._v(" "),n("h3",{attrs:{id:"源码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#源码"}},[t._v("#")]),t._v(" 源码")]),t._v(" "),n("p",[t._v("源码截取了三个部分：数据结构、ReadView 的初始化，和判断是否可以看到某事务。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReadView")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// trx id >= 该值的事务一定未提交")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// this is the "high water mark"')]),t._v("\n    trx_id_t m_low_limit_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// trx id < 该值的事务一定已提交")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// this is the low water mark"')]),t._v("\n    trx_id_t m_up_limit_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该 ReadView 所属事务的 id")]),t._v("\n    trx_id_t m_creator_trx_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 活跃事务 id 的数组")]),t._v("\n    ids_t m_ids"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** The view does not need to see the undo logs for transactions\n    whose transaction number is strictly smaller (<) than this value:\n    they can be removed in purge if not needed by other views */")]),t._v("\n    trx_id_t m_low_limit_no"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化 ReadView 的过程")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepare")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trx_id_t id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ut_ad")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("trx_sys_mutex_own")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        m_creator_trx_id "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        m_low_limit_no "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("trx_get_serialisation_min_trx_no")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        m_low_limit_id "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("trx_sys_get_next_trx_id_or_no")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ut_a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m_low_limit_no "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" m_low_limit_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("trx_sys"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("rw_trx_ids"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy_trx_ids")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trx_sys"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("rw_trx_ids"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            m_ids"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* The first active transaction has the smallest id. */")]),t._v("\n        m_up_limit_id "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("m_ids"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" m_ids"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("front")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" m_low_limit_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ut_a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m_up_limit_id "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" m_low_limit_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ut_d")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m_view_low_limit_no "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m_low_limit_no"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        m_closed "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据 m_up_limit_id m_low_limit_id m_ids m_creator_trx_id 判断是否可以看到某事物")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("changes_visible")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trx_id_t id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" table_name_t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("MY_ATTRIBUTE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("warn_unused_result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ut_ad")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" m_up_limit_id "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" id "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" m_creator_trx_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("check_trx_id_sanity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" m_low_limit_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m_ids"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ids_t"),n("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("value_type "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m_ids"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("std"),n("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("binary_search")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" m_ids"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"例子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),n("ul",[n("li",[t._v("隔离级别：可重复读 (RR)")]),t._v(" "),n("li",[t._v("当前活跃事务：(4, 8)")]),t._v(" "),n("li",[t._v("开启事务：10\n"),n("ul",[n("li",[t._v("m_up_limit_id = 11, m_low_limit_id = 4, m_ids = [4, 8, 10]")])])]),t._v(" "),n("li",[t._v("读取数据的事务 id 为 1\n"),n("ul",[n("li",[t._v("1 < m_low_limit_id = 4，很早之前就提交了，可见")])])]),t._v(" "),n("li",[t._v("读取数据的事务 id 为 12\n"),n("ul",[n("li",[t._v("12 > m_up_limit_id = 11，创建时还没提交，不可见")]),t._v(" "),n("li",[t._v("从这条数据的 undo log 找到前一个版本，找到修改者是 8，在 m_ids 中，是活跃事务（未提交），不可见")]),t._v(" "),n("li",[t._v("从前一个版本的 undo log 找到前两个版本，找到修改者是 6，不在 m_ids 中，不是活跃事务（未提交），可见")])])])]),t._v(" "),n("h2",{attrs:{id:"回滚段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#回滚段"}},[t._v("#")]),t._v(" 回滚段")]),t._v(" "),n("ul",[n("li",[t._v("回滚段 (rollback segment) 装有很多 undo log。")]),t._v(" "),n("li")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个事务中的回滚段")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("trx_rsegs_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里将 undo log 分为两类：实体表的 undo log 和临时表的 undo log")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实体表的 undo log，需要写 redo")]),t._v("\n    trx_undo_ptr_t m_redo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 临时表的 undo log，不需要写 redo")]),t._v("\n    trx_undo_ptr_t m_noredo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** Represents an instance of rollback segment along with its state variables.*/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("trx_undo_ptr_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    trx_rseg_t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("rseg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undo log 所在回滚段")]),t._v("\n    trx_undo_t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("insert_undo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// insert undo log")]),t._v("\n    trx_undo_t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("update_undo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update undo log")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undo segment 在内存中的结构，每个 undo segement 一个")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("trx_rseg_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** List of update undo logs */")]),t._v("\n    Undo_list update_undo_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** List of update undo log segments cached for fast reuse */")]),t._v("\n    Undo_list update_undo_cached"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** List of insert undo logs */")]),t._v("\n    Undo_list insert_undo_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** List of insert undo log segments cached for fast reuse */")]),t._v("\n    Undo_list insert_undo_cached"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undo log")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("trx_undo_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 链表结点，存储了 previous 和 next")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("UT_LIST_NODE_T")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trx_undo_t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" undo_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[n("code",[t._v("id")]),t._v(" 在事务刚创建时分配，用于区分不同的事务。")]),t._v(" "),n("li",[n("code",[t._v("no")]),t._v(" 是在事务提交前，通过同一个全局 id 生产器产生的，主要目的是为了确定事务提交的顺序，保证加入到history list中的update undo有序，方便purge线程清理。")])]),t._v(" "),n("h2",{attrs:{id:"trx-t"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#trx-t"}},[t._v("#")]),t._v(" trx_t")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://dev.mysql.com/doc/dev/mysql-server/latest/structtrx__t.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("每个连接持有一个，这个连接的所有事务一直复用里面的数据结构。")]),t._v(" "),n("ul",[n("li",[t._v("事务启动后，会把这个结构体加入到全局事务链表"),n("code",[t._v("trx_sys->mysql_trx_list")])]),t._v(" "),n("li",[t._v("如果是读写事务，还会加入到全局读写事务链表 "),n("code",[t._v("trx_sys->rw_trx_list")])]),t._v(" "),n("li",[t._v("在事务提交的时候，还会加入到全局提交事务链表"),n("code",[t._v("trx_sys->trx_serial_list")])])]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 事务")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("trx_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ulint isolation_level"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    trx_id_t \tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    trx_id_t \tno"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ReadView "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \tread_view"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    trx_rsegs_t rsegs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个事务中的回滚段")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"事务系统-trx-sys-源码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#事务系统-trx-sys-源码"}},[t._v("#")]),t._v(" 事务系统 trx_sys 源码")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /storage/innobase/include/trx0sys.h")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** The transaction system */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" trx_sys_t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("trx_sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /storage/innobase/include/trx0sys.h")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("trx_sys_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Rsegs 为 vector<trx_rseg_t *> 的封装")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记录了实体表的所有回滚段")]),t._v("\n    Rsegs rsegs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记录了临时表的所有回滚段")]),t._v("\n    Rsegs tmp_rsegs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 系统当前还未分配的最小事务id")]),t._v("\n    std"),n("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("atomic"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("trx_id_t"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" next_trx_id_or_no"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 活跃的最小 id，用于 purge")]),t._v("\n    std"),n("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("atomic"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("trx_id_t"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" min_active_trx_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存放当前系统的所有读写事务，包括活跃的和已经提交的事务。按照事务id排序，此外，奔溃恢复后产生的事务和系统的事务也放在上面")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("UT_LIST_BASE_NODE_T")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trx_t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" trx_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" rw_trx_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存放所有用户创建的事务，系统的事务和奔溃恢复后的事务不会在这个链表上，但是这个链表上可能会有还没开始的用户事务。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("UT_LIST_BASE_NODE_T")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trx_t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mysql_trx_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" mysql_trx_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("这里有一个小插曲：读到这部分代码的时候，注意到出现了很多个没有用的 "),n("code",[t._v("pad")]),t._v("。这些 "),n("code",[t._v("pad")]),t._v(" 没有初始化，也没有引用，注释里写的是 “被互斥锁 mutex 保护的成员”，不明白是什么意思。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("trx_sys_t")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Members protected by neither trx_sys_t::mutex nor serialisation_mutex. */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" pad0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ut"),n("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("INNODB_CACHE_LINE_SIZE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" pad1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ut"),n("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("INNODB_CACHE_LINE_SIZE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" pad2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ut"),n("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("INNODB_CACHE_LINE_SIZE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" pad7"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ut"),n("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("INNODB_CACHE_LINE_SIZE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" pad_after"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ut"),n("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("INNODB_CACHE_LINE_SIZE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("一番搜索以后，找到一篇文章"),n("a",{attrs:{href:"http://ifeve.com/disruptor-cacheline-padding/",target:"_blank",rel:"noopener noreferrer"}},[t._v("剖析Disruptor:为什么会这么快？（二）神奇的缓存行填充"),n("OutboundLink")],1),t._v("。大概意思是这种填充是在数据中间填充 CPU cache line 大小的 "),n("code",[t._v("pad")]),t._v("，故意把 "),n("code",[t._v("pad")]),t._v(" 上下的数据分隔开，避免这些数据被一次性读进一个 cache line。两个数据被读进一个 cache line 的后果是，一个核想更新一个数据，另一个核想更新另一个数据，就会导致这两个核出现 "),n("code",[t._v("false sharing")]),t._v("，导致多次缓存失效。")]),t._v(" "),n("p",[n("img",{attrs:{src:"/images/648cb9f56b338cfa52a03e6d11a1cc805091d13024a49a25515b9bc567deb199.png",alt:"false sharing"}})]),t._v(" "),n("h2",{attrs:{id:"purge-系统-purge-sys"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#purge-系统-purge-sys"}},[t._v("#")]),t._v(" Purge 系统 purge_sys")]),t._v(" "),n("p",[t._v("Purge 系统是和事务系统独立的另一个系统。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// storage/innobase/trx/trx0purge.cc")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** The global data structure coordinating a purge */")]),t._v("\ntrx_purge_t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("purge_sys "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("服务启动的时候会创建 purge_queue，并给到 perge_sys 初始化函数以初始化 perge_sys。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("dberr_t "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("srv_start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" create_new_db"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    purge_queue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("trx_sys_init_at_db_start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* The purge system needs to create the purge view and\n    therefore requires that the trx_sys is inited. */")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("trx_purge_sys_initialize")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("srv_threads"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("m_purge_workers_n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" purge_queue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);