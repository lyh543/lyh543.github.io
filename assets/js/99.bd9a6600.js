(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{455:function(e,a,t){"use strict";t.r(a);var r=t(3),s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"caddy-优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#caddy-优缺点"}},[e._v("#")]),e._v(" Caddy 优缺点")]),e._v(" "),t("p",[e._v("最近了解了一下 Caddy，准备从 Nginx 转到 Caddy。本文指的 Caddy 均为 Caddy 2。")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://caddyserver.com/docs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Caddy 官方文档"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://dengxiaolong.com/caddy/zh/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Caddy 中文文档"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Caddy 的优点有：")]),e._v(" "),t("ul",[t("li",[e._v("自动申请 TLS 证书（一大卖点！）")]),e._v(" "),t("li",[e._v("语法简洁")])]),e._v(" "),t("p",[e._v("缺点有：")]),e._v(" "),t("ul",[t("li",[e._v("插件较 Nginx 少")]),e._v(" "),t("li",[e._v("文档不多，而且网上的讨论也不多")])]),e._v(" "),t("h2",{attrs:{id:"安装-caddy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-caddy"}},[e._v("#")]),e._v(" 安装 Caddy")]),e._v(" "),t("p",[e._v("参考链接："),t("a",{attrs:{href:"https://caddyserver.com/docs/download",target:"_blank",rel:"noopener noreferrer"}},[e._v("下载"),t("OutboundLink")],1),e._v(" | "),t("a",{attrs:{href:"https://caddyserver.com/docs/install",target:"_blank",rel:"noopener noreferrer"}},[e._v("安装"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("由于 "),t("code",[e._v("yum")]),e._v(" 自带的是 Caddy 1，而我按官网从 "),t("code",[e._v("yum")]),e._v(" 下载 Caddy 的方法貌似会报错，因选择了手动安装。")]),e._v(" "),t("p",[e._v("安装好以后，编写一个简单的 Caddyfile 用于测试：")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" /etc/caddy\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("vim")]),e._v(" /etc/caddy/Caddyfile\n")])])]),t("p",[e._v("输入如下内容，然后保存：")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v(":2015\n\nHello world"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n")])])]),t("p",[e._v("启用 Caddy 服务并启动，然后查看其状态：")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 启用")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl daemon-reload\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("enable")]),e._v(" caddy\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 启动")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl start caddy\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 查看状态")]),e._v("\nsystemctl status caddy\n")])])]),t("p",[e._v("如果是 "),t("code",[e._v("active (running)")]),e._v("，则安装成功！如果是 "),t("code",[e._v("failed")]),e._v("，请检查 "),t("code",[e._v("Caddyfile")]),e._v(" 的位置是否正确（按官方的配置，应该是 "),t("code",[e._v("/etc/systemd/system/caddy.service")]),e._v("）。")]),e._v(" "),t("p",[e._v("验证一下网站服务，curl 获取网站内容：")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" localhost:2015\n")])])]),t("p",[e._v("如果返回 "),t("code",[e._v("Hello world!")]),e._v(" 即正确。")]),e._v(" "),t("p",[e._v("以后，如果修改了 Caddyfile，使用 "),t("code",[e._v("systemctl reload caddy")]),e._v(" 即可使其重新读取配置文件。")]),e._v(" "),t("h2",{attrs:{id:"运行-caddy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行-caddy"}},[e._v("#")]),e._v(" 运行 Caddy")]),e._v(" "),t("p",[e._v("Caddy 可以由用户运行，也可以由 caddy 用户以 "),t("code",[e._v("systemctl")]),e._v(" 的形式在后台运行。")]),e._v(" "),t("p",[e._v("由于 "),t("code",[e._v("systemctl")]),e._v(" 运行出错时的提示很少，推荐学习、测试的时候使用用户身份运行，测试完成以后使用 "),t("code",[e._v("systemctl")]),e._v("。")]),e._v(" "),t("p",[e._v("以用户身份运行及停止：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("caddy start\ncaddy stop\n")])])]),t("p",[e._v("这两条命令会读取当前目录的 "),t("code",[e._v("Caddyfile")]),e._v("，所以记得提前切换到 "),t("code",[e._v("/etc/caddy")]),e._v("。")]),e._v(" "),t("p",[e._v("以系统身份运行及停止：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("systemctl start caddy\nsystemctl stop caddy\n")])])]),t("p",[e._v("查看调试信息：")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("systemctl status caddy\n")])])]),t("p",[e._v("两种方法的重新加载分别为：")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("caddy reload\nsystemctl reload caddy\n")])])]),t("h2",{attrs:{id:"caddyfile-常见配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#caddyfile-常见配置"}},[e._v("#")]),e._v(" Caddyfile 常见配置")]),e._v(" "),t("p",[e._v("在不进行额外设置的情况下，Caddy 都是 443 端口自动申请 HTTPS，80 端口重定向到 443 端口的。")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://caddyserver.com/docs/caddyfile/patterns",target:"_blank",rel:"noopener noreferrer"}},[e._v("常见配置"),t("OutboundLink")],1),e._v("，入门 Caddyfile 时也可以参考一下，对 Caddyfile 有个基本的认识。")]),e._v(" "),t("h2",{attrs:{id:"caddyfile-入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#caddyfile-入门"}},[e._v("#")]),e._v(" Caddyfile 入门")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://caddyserver.com/docs/caddyfile",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方教程"),t("OutboundLink")],1)]),e._v(" "),t("h3",{attrs:{id:"hello-world"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hello-world"}},[e._v("#")]),e._v(" Hello World!")]),e._v(" "),t("p",[e._v("如果只打算定义一个网站，Caddyfile 的第一行是网址，后面的就是一个或多个指令 "),t("code",[e._v("directive")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("localhost\n\nrespond "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Hello, world!"')]),e._v("\n")])])]),t("p",[e._v("将上述文本保存在 "),t("code",[e._v("/etc/caddy/Caddyfile")]),e._v("，然后使用 "),t("code",[e._v("systemctl reload caddy")]),e._v(" 重新读取后，就可以尝试用浏览器或 curl 打开该网站：")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" https://localhost\nHello, world"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n")])])]),t("h3",{attrs:{id:"定义多个网站"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义多个网站"}},[e._v("#")]),e._v(" 定义多个网站")]),e._v(" "),t("p",[e._v("一个文件可以定义多个网站。但是需要将上述语法改为下面的等价语法：")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("localhost "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 大括号前必须有空格")]),e._v("\n    respond "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Hello, world!"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),t("p",[e._v("就可以在多个语法块中定义每个网站了。")]),e._v(" "),t("h3",{attrs:{id:"import-其他配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#import-其他配置文件"}},[e._v("#")]),e._v(" import 其他配置文件")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://caddyserver.com/docs/caddyfile/directives/import",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("也可以在多个文件中定义配置。如在 "),t("code",[e._v("a.txt")]),e._v(" 写入以下内容：")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("a.com "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    respond "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Hello, world!"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),t("p",[e._v("在 "),t("code",[e._v("b.txt")]),e._v(" 写入以下内容：")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("b.com "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    respond "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Nice to meet you!"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),t("p",[e._v("然后在 "),t("code",[e._v("Caddyfile")]),e._v(" 中写入：")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 以 Caddyfile 形式导入两个 txt")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("import")]),e._v(" a.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("import")]),e._v(" b.txt\n")])])]),t("p",[e._v("即可。")]),e._v(" "),t("p",[e._v("和 Nginx 一样，你需要提前将 "),t("code",[e._v("a.com")]),e._v(" 和 "),t("code",[e._v("b.com")]),e._v(" 的域名解析以 A 形式指向你的服务器 IP。")]),e._v(" "),t("h3",{attrs:{id:"静态网站-file-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态网站-file-server"}},[e._v("#")]),e._v(" 静态网站 file_server")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://caddyserver.com/docs/caddyfile/directives/file_server",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("example.com {\n    root * /var/www\n    encode gzip zstd\n    file_server\n}\n")])])]),t("p",[e._v("访问 "),t("code",[e._v("https://example.com")]),e._v(" 会看到服务器 "),t("code",[e._v("/var/www/")]),e._v(" 的内容。如果存在 "),t("code",[e._v("index.html")]),e._v("，则会打开这个网页。还可指定别的 index：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("example.com {\n    root * /var/www\n    encode gzip zstd\n    file_server {\n        index www.index.html\n    }\n}\n")])])]),t("p",[e._v("还可以使用浏览器浏览文件夹 + 重定向 + 加上反斜线。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("example.com {\n    redir /v /v/\n    handle /v/* {\n        uri strip_prefix /v\n        encode gzip zstd\n        file_server browse {\n            root /etc/uestcmsc_webapp/getproxy/\n        }\n    }\n}\n")])])]),t("h3",{attrs:{id:"反向代理-reverse-proxy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#反向代理-reverse-proxy"}},[e._v("#")]),e._v(" 反向代理 reverse_proxy")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://caddyserver.com/docs/caddyfile/directives/reverse_proxy",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("example.com {\n    reverse_proxy localhost:5000\n}\n")])])]),t("p",[e._v("三行即可。访问 "),t("code",[e._v("https://example.com")]),e._v(" 实际上访问的是服务器的 5000 端口。")]),e._v(" "),t("p",[e._v("利用以下配置可将 "),t("code",[e._v("https://example.com/proxy")]),e._v(" 反向代理到 "),t("code",[e._v("localhost:5000")]),e._v("。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("example.com {\n    reverse_proxy /proxy localhost:5000\n}\n")])])]),t("p",[e._v("还可利用以下配置可将 "),t("code",[e._v("https://example.com")]),e._v(" 反向代理到 "),t("code",[e._v("localhost:5000/proxy")]),e._v("。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("example.com {\n    uri replace / /proxy 1\n    reverse_proxy localhost:5000\n}\n")])])]),t("p",[e._v("上述配置表示，在反向代理之前，将 uri 的前 "),t("code",[e._v("1")]),e._v(" 个 "),t("code",[e._v("/")]),e._v(" 替换为 "),t("code",[e._v("/proxy")]),e._v("。")]),e._v(" "),t("p",[e._v("也可以修改 "),t("code",[e._v("header")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("example.com {\n    uri replace / /proxy 1\n    reverse_proxy localhost:5000 {\n            header_up Host {host}\n            header_up X-Real-IP {remote_host}\n            header_up X-Forwarded-For {remote_host}\n            header_up X-Forwarded-Proto {scheme}\n        }\n}\n")])])]),t("h3",{attrs:{id:"重定向-redir"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重定向-redir"}},[e._v("#")]),e._v(" 重定向 redir")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://caddyserver.com/docs/caddyfile/directives/redir",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("www.example.com {\n\tredir https://example.com{uri}\n}\n")])])]),t("p",[e._v("访问 "),t("code",[e._v("www.example.com")]),e._v(" 会 "),t("code",[e._v("302 Redirect")]),e._v(" 重定向到 "),t("code",[e._v("https://example.com")]),e._v("。")]),e._v(" "),t("p",[e._v("也可以使用 "),t("code",[e._v("permanent")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("www.example.com {\n\tredir https://example.com{uri} permanent\n}\n")])])]),t("p",[e._v("访问 "),t("code",[e._v("www.example.com")]),e._v(" 会 "),t("code",[e._v("301 Move permanently")]),e._v(" 重定向到 "),t("code",[e._v("https://example.com")]),e._v("。")]),e._v(" "),t("h3",{attrs:{id:"按顺序执行-route"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#按顺序执行-route"}},[e._v("#")]),e._v(" 按顺序执行 route")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://caddyserver.com/docs/caddyfile/directives/route",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("上述语法 "),t("code",[e._v("file_server")]),e._v("、"),t("code",[e._v("reverse_proxy")]),e._v("、"),t("code",[e._v("redir")]),e._v(" 可以混合使用。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("example.com {\n    reverse_proxy /proxy localhost:5000\n    redir         /github github.com\n    redir         /google google.com\n    file_server   *      /var/www/html/\n}\n")])])]),t("p",[e._v("这会使得 "),t("code",[e._v("example.com/proxy")]),e._v("、"),t("code",[e._v("example.com/github")]),e._v("、"),t("code",[e._v("example.com/google")]),e._v(" 以及 "),t("code",[e._v("example.com")]),e._v(" 的其他地址执行对应的功能。")]),e._v(" "),t("p",[e._v("但是，默认情况下，在执行过程中，指令的执行顺序会根据指令名进行调整。比如，"),t("code",[e._v("file_server")]),e._v(" 是最后执行的。如果改成以下代码，"),t("code",[e._v("file_server")]),e._v(" 则不会被运行，因为在执行到 "),t("code",[e._v("file_server")]),e._v(" 之前，"),t("code",[e._v("/google")]),e._v(" 已经被重定向了。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("example.com {\n    reverse_proxy /proxy localhost:5000\n    redir         /github github.com\n    file_server   /google /var/www/html/\n    redir         *       google.com\n}\n")])])]),t("p",[e._v("如果真的需要这么做，可以将所有命令包含在 "),t("code",[e._v("route")]),e._v(" 的语句块中。语句块中的内容将"),t("strong",[e._v("被顺序执行")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("example.com {\n    route {\n        reverse_proxy /proxy localhost:5000\n        redir         /github github.com\n        file_server   /google /var/www/html/\n        redir         *       google.com\n    }\n}\n")])])]),t("h3",{attrs:{id:"处理-handle"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#处理-handle"}},[e._v("#")]),e._v(" 处理 handle")]),e._v(" "),t("p",[t("code",[e._v("handle")]),e._v(" 类似于 Nginx 中的 "),t("code",[e._v("location")]),e._v("，是一种类似于分支逻辑的 HTTP handler logic（HTTP 处理逻辑）。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("example.com {\n    handle /foo/* {\n        file_server\n    }\n    handle / {\n        reverse_proxy 127.0.0.1:8080\n    }\n}\n")])])]),t("p",[e._v("上述语法就会将 "),t("code",[e._v("/foo")]),e._v(" 下面的网址以 "),t("code",[e._v("file_server")]),e._v(" 运行，对其他则会进行反向代理。实现的功能和 "),t("code",[e._v("route")]),e._v(" 类似，不过我猜测 "),t("code",[e._v("handle")]),e._v(" 处理这类问题更高效。")]),e._v(" "),t("h3",{attrs:{id:"定义错误页面-handle-errors"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义错误页面-handle-errors"}},[e._v("#")]),e._v(" 定义错误页面 handle_errors")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://caddyserver.com/docs/caddyfile/directives/handle_errors#handle-errors",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("基于静态网站定义 404 页面的代码如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("example.com {\n    root * /var/www/\n    file_server\n    handle_errors {\n        rewrite * /{http.error.status_code}.html\n        file_server\n    }\n}\n")])])]),t("p",[e._v("访问到不存在的网址则会显示 "),t("code",[e._v("/404.html")]),e._v(" 的内容（但网址不会变化，仍然是访问的网址）。")]),e._v(" "),t("h3",{attrs:{id:"rewrite-url-try-files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rewrite-url-try-files"}},[e._v("#")]),e._v(" rewrite url try_files")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://caddyserver.com/docs/caddyfile/directives/rewrite",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("这三条命令都是修改 uri 用。")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("rewrite")]),e._v(" 将匹配的 uri 修改为指定的 uri；")]),e._v(" "),t("li",[t("code",[e._v("uri")]),e._v(" 在原 uri 上进行修改；")]),e._v(" "),t("li",[t("code",[e._v("try_files")]),e._v(" 将 "),t("code",[e._v("uri")]),e._v(" 修改为列出路径中，路径对应的文件（文件夹）存在的第一项。")])]),e._v(" "),t("p",[e._v("修改以后，只是访问的路径变化，"),t("strong",[e._v("并不会在地址栏有所体现")]),e._v("。")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[e._v("example1.com "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    rewrite * /foo.html             "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 将所有路径修改为 foo.html")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\nexample2.com "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    uri replace / /proxy "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 将第一个 / 修改为 /proxy，即在链接前添加一个 /proxy")]),e._v("\n    reverse_proxy localhost:9000    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# example2.com/ => localhost:9000/proxy")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\nexample2.com "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    route /api/* "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        uri strip_prefix /api\n        reverse_proxy localhost:9000\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\nexample3.com "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    try_files "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" /index.php "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 如果 {path} 存在，访问 {path}；否则访问 index.php")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),t("h3",{attrs:{id:"占位符-placeholders"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#占位符-placeholders"}},[e._v("#")]),e._v(" 占位符 placeholders")]),e._v(" "),t("p",[e._v("上文的 "),t("code",[e._v("{uri}")]),e._v(" 即是一种占位符。更多的占位符可见：https://caddyserver.com/docs/caddyfile/concepts#placeholders")]),e._v(" "),t("h3",{attrs:{id:"匹配串-matchers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#匹配串-matchers"}},[e._v("#")]),e._v(" 匹配串 matchers")]),e._v(" "),t("p",[e._v("配置文件中一个很重要的部分是匹配串（matchers）如 "),t("code",[e._v("/")]),e._v(" "),t("code",[e._v("/proxy")]),e._v("。在 https://caddyserver.com/docs/caddyfile/matchers 做了详细介绍。")]),e._v(" "),t("h2",{attrs:{id:"泛域名-https"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#泛域名-https"}},[e._v("#")]),e._v(" 泛域名 HTTPS?")]),e._v(" "),t("p",[e._v("当然，以上域名只做到了单域名 HTTPS，对于泛域名解析 HTTPS 则会麻烦得多。这是由于在 Let's Encrypt，单域名 HTTPS 证书可以使用 HTTP 验证（在网站对应的指定路径放一个指定的 HTML），而泛域名 （如"),t("code",[e._v("*.example.com")]),e._v(" HTTPS 证书则需要使用 DNS 验证（在指定的域名下放一个 DNS 解析）。前者交给 Caddy 做非常方便，而后者就不那么方便了。")]),e._v(" "),t("p",[e._v("对于该问题，有以下解决办法：")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("Caddy 2 的确可以通过插件调用各 DNS 提供商的 API 来实现修改 DNS，但是 Caddy 2 "),t("a",{attrs:{href:"https://github.com/caddy-dns",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方的插件"),t("OutboundLink")],1),e._v("只有很少，像国内阿里云、腾讯云都没有开发。貌似可以在阿里云将域名的 DNS 解析服务器改为 CloudFlare 的，然后利用 CloudFlare API 实现，但是这里我没有深入研究。")])]),e._v(" "),t("li",[t("p",[e._v("相比于 Caddy 2，"),t("a",{attrs:{href:"https://caddyserver.com/v1/download",target:"_blank",rel:"noopener noreferrer"}},[e._v("Caddy 1"),t("OutboundLink")],1),e._v(" 就提供了不少插件（但仍然没有阿里云）。如有需求可改为 Caddy 1。")])]),e._v(" "),t("li",[t("p",[e._v("使用 "),t("a",{attrs:{href:"https://caddyserver.com/docs/automatic-https#on-demand-tls",target:"_blank",rel:"noopener noreferrer"}},[e._v("On-Demand TLS"),t("OutboundLink")],1),e._v(" 技术。这是 Caddy 研发的一种技术。")])])]),e._v(" "),t("p",[e._v("在第一次 TLS 握手时，如果发现本地没有 HTTPS 证书或已过期以后，就立刻向 Let's Encrypt 申请证书，成功后保存该证书，并完成此次握手；此后如果发现存在 HTTPS 证书且有效，就会使用该证书完成握手。")]),e._v(" "),t("p",[e._v("该方法的优点非常明显，就是可以用对访问到的每个域名申请 HTTPS 证书的方法，代替 DNS 验证。缺点也很明显，由于 HTTPS 证书申请需要时间，再加上国内网络问题，在首次访问某域名时，需要等待 10-40 秒不等供 Caddy 服务器申请证书。")]),e._v(" "),t("p",[e._v("我最终采用了这种方式，因为使用泛域名解析只是为了跳转到主域名上，实际上没有几个人会访问这些域名的。")]),e._v(" "),t("p",[e._v("On-Demand TLS 语法如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("*.example.com {\n    tls {\n        on_demand\n    }\n    redir https://example.com{uri} permanent\n}\n")])])]),t("ol",{attrs:{start:"4"}},[t("li",[e._v("最后一种无奈之举，就是不使用 HTTPS。如果该域名只是做一个 "),t("code",[e._v("redir")]),e._v("，其实不使用 HTTP 也还可以接受。")])]),e._v(" "),t("p",[e._v("Caddy 不使用 HTTPS 的语法是，在域名后指定 "),t("code",[e._v("80")]),e._v(" 端口。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("*.example.com:80 {\n    redir https://example.com{uri} permanent\n}\n\n# or\nhttp://*.example.com {\n    redir https://example.com{uri} permanent\n}\n")])])]),t("p",[e._v("但这两种写法都有个 bug：如果前面定义了 "),t("code",[e._v("a.example.com { ... }")]),e._v("，访问 "),t("code",[e._v("http://a.example.com")]),e._v(" 会被重定向到 "),t("code",[e._v("https://example.com")]),e._v("，而不是 "),t("code",[e._v("https://a.example.com")]),e._v("。")])])}),[],!1,null,null,null);a.default=s.exports}}]);