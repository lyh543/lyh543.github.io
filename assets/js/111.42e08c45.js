(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{526:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("参考链接：https://github.com/guyaqi/backups/blob/master/notes/cpp1-2.md")])]),t._v(" "),a("p",[t._v("Win32 API 的函数大多名称较长，如果不是有意向专门学习的话，没有太大的必要特地记住(用的时候还是会忘)")]),t._v(" "),a("p",[t._v("微软公司出产的各种 API，都可以在 "),a("a",{attrs:{href:"https://msdn.microsoft.com/zh-cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("msdn"),a("OutboundLink")],1),t._v(" 找到详细的文档和简单的例子，如果你想了解某个 Win32 API 的所有用法，这是最权威的地方。")]),t._v(" "),a("p",[t._v("所有 Win32 API 都需要包含 "),a("code",[t._v("Windows.h")]),t._v(" 头文件。")]),t._v(" "),a("h2",{attrs:{id:"system-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#system-函数"}},[t._v("#")]),t._v(" system() 函数")]),t._v(" "),a("p",[t._v("直接执行 "),a("code",[t._v("cmd")]),t._v(" 命令行的命令。对于在学 C++ 之前学命令行/批处理的人，这个用起来很香。")]),t._v(" "),a("h2",{attrs:{id:"涉及字符串的函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#涉及字符串的函数"}},[t._v("#")]),t._v(" 涉及字符串的函数")]),t._v(" "),a("p",[t._v("这部分可能会有点坑。因为涉及到字符串编码，所以在英文上可能没什么问题，但是换成中文就会乱码。")]),t._v(" "),a("blockquote",[a("blockquote",[a("p",[t._v("摘自：https://github.com/guyaqi/backups/blob/master/notes/cpp1-4.md")])]),t._v(" "),a("p",[t._v("TCHAR 与 TEXT 宏,这两个宏在对应的情况下有不同的解释，这与你的编译器默认使用的编码方式相关。")]),t._v(" "),a("ul",[a("li",[t._v("当 UNICODE 宏被定义的时候（MSVC 编译器指令 "),a("code",[t._v("/D UNICODE")]),t._v(")，TCHAR 是 wchat_t，TEXT 宏被解释成 C 语言内部用来转换宽字符的宏 "),a("code",[t._v('L"somestr"')])]),t._v(" "),a("li",[t._v("如果没有定义 UNICODE 宏，TCHAR 就是 char，TEXT 宏不进行任何操作。")])]),t._v(" "),a("p",[t._v("这种设定是在 utf-8 编码没有被广泛支持的时候,为了程序代码能够兼容使用不同代码的机器设定的，比如我使用的 win7 默认使用 gb2312（还是 gbk 来着）字符集对应的编码方式,而 win10 以上和其他使用 linux 内核的系统默认使用 utf-8 编码方式。")]),t._v(" "),a("p",[t._v("值得一提的是 utf-8 使用 char，而通常 C++，Java，C# 对 UNICODE 的支持指的是使用 utf-16 的编码方式，在 C++ 中 utf-16 字符就是 wchar_t（宽字符）。")])]),t._v(" "),a("p",[t._v("简单的来说，C++ 有两种编码，一种是 ASCII 与其的拓展 UTF-8，另一种是 Unicode。C++ 默认使用的 "),a("code",[t._v("char")]),t._v(" 是 ASCII 的，也就是说，你调用 Win32 API 时使用的是 "),a("code",[t._v("char")]),t._v(" 字符串，但是程序按 Unicode 执行（Visual Studio 默认），那么就会出现乱码。（也可能出现编译错误，因为 "),a("code",[t._v("wchar_t")]),t._v(" 和 "),a("code",[t._v("char")]),t._v(" 是不能隐式转换的）")]),t._v(" "),a("p",[t._v("有三种解决办法：")]),t._v(" "),a("p",[t._v("一是将所有设计到字符和字符串的地方都改为 Unicode 流派的 "),a("code",[t._v("wchar_t")]),t._v(", "),a("code",[t._v("wstring")]),t._v(", "),a("code",[t._v("wiostream")]),t._v(" 等等。如下面的程序：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("TCHAR title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TEXT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"新标题"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setConsoleTitle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("不过，在涉及到 "),a("code",[t._v("char")]),t._v(" 到 "),a("code",[t._v("wchar_t")]),t._v(" 的转换时，容易出问题。貌似没有好的转换方法。也就是，要么全部用 Unicode，要么就不用 Unicode。")]),t._v(" "),a("p",[t._v("方法二是将涉及到这样的函数的后面加一个 "),a("code",[t._v("A")]),t._v("。原因是，Visual Studio 的源码是这样实现这些函数的：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("UNICODE")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("SetConsoleTitle")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("SetConsoleTitleW")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("else")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("SetConsoleTitle")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("SetConsoleTitleA")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// !UNICODE")])]),t._v("\n")])])]),a("p",[t._v("可以看到，这类函数都是用宏定义将函数分为两类，然后分开执行。第二种方法就是直接去执行带 "),a("code",[t._v("A")]),t._v(" 的版本。")]),t._v(" "),a("p",[t._v("第三种方法就是取消 "),a("code",[t._v("Unicode")]),t._v(" 的宏定义。具体在 Visual Studio 的 "),a("code",[t._v("项目属性->配置属性->常规->字符集")]),t._v("，设置为多节字符集（多字节字符集即没有设置UNICODE宏，使用Unicode字符集就是设置了 "),a("code",[t._v("UNICODE")]),t._v(" 宏）。")]),t._v(" "),a("p",[t._v("设置的效果可以去 "),a("code",[t._v("C/C++->预处理器->预处理器定义")]),t._v(" 查看")]),t._v(" "),a("p",[t._v("注意 "),a("code",[t._v("QT-Addin")]),t._v(" 生成的 Visual Studio 项目默认是加上 "),a("code",[t._v("UNICODE")]),t._v(" 宏，只去 "),a("code",[t._v("项目属性->配置属性->常规->字符集")]),t._v(" 没用，还要手动把 "),a("code",[t._v("QT-Addin")]),t._v(" 设置的 "),a("code",[t._v("UNICODE")]),t._v(" 宏删掉。"),a("a",{attrs:{href:"https://www.cnblogs.com/qrlozte/p/4972682.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考链接"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"程序信息部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序信息部分"}},[t._v("#")]),t._v(" 程序信息部分")]),t._v(" "),a("p",[t._v("中望龙腾 C++ 岗笔试考过。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<direct.h>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_getcwd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取当前文件夹")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__FUNCSIG__:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" __FUNCSIG__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取函数完整签名")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__FUNCTION__:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" __FUNCTION__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取函数名")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__LINE__:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__LINE__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取行数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("输出：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("C:\\Users\\liu\\Desktop\\test\\cpp\n__FUNCSIG__:int __cdecl main(void)\n__FUNCTION__:main\n__LINE__:11\n")])])]),a("h2",{attrs:{id:"窗口部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#窗口部分"}},[t._v("#")]),t._v(" 窗口部分")]),t._v(" "),a("p",[t._v("窗口部分大多可以直接通过 "),a("code",[t._v("system()")]),t._v(" 调用命令行的命令修改。")]),t._v(" "),a("h3",{attrs:{id:"修改窗口标题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改窗口标题"}},[t._v("#")]),t._v(" 修改窗口标题")]),t._v(" "),a("p",[t._v("一个是用 "),a("code",[t._v("cmd")]),t._v(" 命令的版本：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("system")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title newTitle"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("s",[t._v("好随意的标题")])]),t._v(" "),a("p",[t._v("还有另一个版本，调用 Win32 API：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("TCHAR title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("TEXT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"新标题"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setConsoleTitle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("但是如果涉及到变量字符串，就会变得比较麻烦了，建议涉及到标题部分的变量的地方都使用 utf-16 的东西，如 "),a("code",[t._v("wchar_t")]),t._v("，"),a("code",[t._v("wstring")]),t._v("，"),a("code",[t._v("wcout")]),t._v("。"),a("br"),t._v("\n如果需要 "),a("code",[t._v("char")]),t._v(" 到 "),a("code",[t._v("wchar_t")]),t._v(" 的转化。目前测试了 "),a("code",[t._v("swprintf()")]),t._v(" 和 "),a("code",[t._v("mbtowc()")]),t._v(" 函数，在配合 "),a("code",[t._v("setConsoleTitle()")]),t._v(" 函数时均出现了问题。")]),t._v(" "),a("p",[t._v("如果必须使用 "),a("code",[t._v("char")]),t._v("，可以尝试下面的方法：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"新标题"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setConsoleTitleA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("强制指定使用 "),a("code",[t._v("char")]),t._v("。貌似挺好用的。")]),t._v(" "),a("h3",{attrs:{id:"修改窗口颜色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改窗口颜色"}},[t._v("#")]),t._v(" 修改窗口颜色")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("system")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"color 3f"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("3 和 f 分别是用 16 进制数字表示的 foreground color 和 background color。具体对应关系可以自己在命令行中输入 "),a("code",[t._v("color /?")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"修改窗口大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改窗口大小"}},[t._v("#")]),t._v(" 修改窗口大小")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("system")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mode con: cols=120 lines=35"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("mode")]),t._v(" 语句有更多的用处"),a("s",[t._v("不过看不懂")])]),t._v(" "),a("h2",{attrs:{id:"光标部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#光标部分"}},[t._v("#")]),t._v(" 光标部分")]),t._v(" "),a("h3",{attrs:{id:"获取光标位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取光标位置"}},[t._v("#")]),t._v(" 获取光标位置")]),t._v(" "),a("p",[t._v("命令行上的光标位置是用 "),a("code",[t._v("HANDLE")]),t._v(" 定义的。关于 "),a("code",[t._v("HANDLE")]),t._v(" 是什么，可以自行 Google 或看这篇"),a("a",{attrs:{href:"../handle"}},[t._v("博客")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("HANDLE handle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetStdHandle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STD_OUTPUT_HANDLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("注意到这个 handle 是随着输出的位置动态变化的，因此不需要在输入前后反复获取。")]),t._v(" "),a("h3",{attrs:{id:"设置光标的颜色-以后输出内容的颜色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置光标的颜色-以后输出内容的颜色"}},[t._v("#")]),t._v(" 设置光标的颜色——以后输出内容的颜色")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("HANDLE handle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetStdHandle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STD_OUTPUT_HANDLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetConsoleTextAttribute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" bc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("fc 和 bc 分别是用 16 进制数字表示的 foreground color 和 background color。具体对应关系可以自己在命令行中输入 "),a("code",[t._v("color /?")]),t._v("。")]),t._v(" "),a("p",[t._v("顺便附 https://github.com/guyaqi/backups/blob/master/notes/cpp1-2.md 的"),a("a",{attrs:{href:"./homework_change_text_color.cpp"}},[t._v("作业 CPP 文件")]),t._v("。")]),t._v(" "),a("p",[t._v("下面是摘自 https://github.com/guyaqi/backups/blob/master/notes/cpp1-2.md 的一个 C++ 程序。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdlib.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<time.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<Windows.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" fc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    HANDLE handle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    handle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetStdHandle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STD_OUTPUT_HANDLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("srand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        bc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetConsoleTextAttribute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" bc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("putchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"设置光标的位置-设置以后输出内容的位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置光标的位置-设置以后输出内容的位置"}},[t._v("#")]),t._v(" 设置光标的位置——设置以后输出内容的位置")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("HANDLE handle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetStdHandle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STD_OUTPUT_HANDLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nCOORD coord "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetConsoleCursorPosition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" coord"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中 "),a("code",[t._v("COORD")]),t._v(" 类型包含两个成员 "),a("code",[t._v("X")]),t._v(" 和 "),a("code",[t._v("Y")]),t._v(" 表示坐标。cursor 翻译为光标。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("_COORD")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    SHORT X"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    SHORT Y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" COORD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("PCOORD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"不显示光标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不显示光标"}},[t._v("#")]),t._v(" 不显示光标")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("HANDLE handle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetStdHandle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STD_OUTPUT_HANDLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nCONSOLE_CURSOR_INFO cursor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("FALSE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetConsoleCursorInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("cursor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("CONSOLE_CURSOR_INFO")]),t._v(" 有两个成员：第一个 "),a("code",[t._v("dwSize")]),t._v(" 表示光标占格子（高度）的百分比，范围是 1-100；第二个 "),a("code",[t._v("bVisible")]),t._v(" 表示是否可见。")]),t._v(" "),a("h2",{attrs:{id:"键盘按键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#键盘按键"}},[t._v("#")]),t._v(" 键盘按键")]),t._v(" "),a("h3",{attrs:{id:"获取按键状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取按键状态"}},[t._v("#")]),t._v(" 获取按键状态")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("SHORT "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetKeyState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nVirtKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nSHORT "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetAsyncKeyState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nVirtKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("首先，这个东西是获取执行函数时，某按键的状态，而不是类似于 "),a("code",[t._v("cmd")]),t._v(" 的 "),a("code",[t._v("choice")]),t._v("。要是要等待输入的话，貌似要使用 "),a("code",[t._v("for(;;)")]),t._v(" 的死循环语法（但是实测不会像 "),a("code",[t._v("for(;;);")]),t._v(" 一样占用过高 CPU），个人感觉不是一个好的输入的形式（先挖个坑，以后来填）。")]),t._v(" "),a("p",[t._v("如果一定要用该方式进行输入，为防止语句运行过快导致某次短按按键被 "),a("code",[t._v("getKeyState()")]),t._v(" 读多次，有两种输入形式：")]),t._v(" "),a("ol",[a("li",[t._v("可以在成功读入一个字符以后，应进行 "),a("code",[t._v("Sleep(100)")]),t._v("（100ms 是玄学调参的结论）。这样做的话，长按的按钮会每 100ms 被识别一次，但是短按后 100ms 以内其他操作无效。")]),t._v(" "),a("li",[t._v("可以用 "),a("code",[t._v("while(getKey() < 0)")]),t._v(" 读到按键结束为止。此方法把长按、短按都视为一次按键。")])]),t._v(" "),a("p",[t._v("其次，这两个函数的区别也有点迷。理论上，前者是获取的 "),a("code",[t._v("Windows message queue")]),t._v(" 里的信息（至于这是什么，我也不懂），后者是获取即时的硬件状态，"),a("a",{attrs:{href:"https://stackoverflow.com/a/24525939",target:"_blank",rel:"noopener noreferrer"}},[t._v("Stack Overflow"),a("OutboundLink")],1),t._v(" 上也建议使用后者，但是我在 Visual Studio 上测试的效果，其实是差不多的。（又挖坑）")]),t._v(" "),a("p",[t._v("再次，对于数字和（大写）字母，参数 "),a("code",[t._v("nVirtKey")]),t._v(" 即是它的 ASCII 码。对于其他按键，可以查阅 "),a("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/windows/win32/inputdev/virtual-key-codes",target:"_blank",rel:"noopener noreferrer"}},[t._v("MSDN 文档的虚拟键码部分"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("最后，对于其返回值，由于按键有上（up）、下（down）和按住（toggled）、没有按住（untoggled），两两组合，共四种状态，因此表示也一共有四种状态。")]),t._v(" "),a("blockquote",[a("p",[t._v("参考链接：https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getkeystate")])]),t._v(" "),a("p",[t._v("把 MSDN 的文档翻译过来就是，返回值的最高位是 1，表示该按键是按下的（down），反之则没有被按下（up）；返回值的最低位是 1，表示该按键被按住（toggled），如果最低位是0，则既没有被按下（up），也没有被按住（untoggled）。")]),t._v(" "),a("p",[t._v("下表是按键状态和对应的返回值：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("按键状态")]),t._v(" "),a("th",[t._v("返回值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("按下并按住（可理解为长按）")]),t._v(" "),a("td",[t._v("1000 0001（-127）")])]),t._v(" "),a("tr",[a("td",[t._v("按下但不按住（可理解为短按）")]),t._v(" "),a("td",[t._v("1000 0000（-128）")])]),t._v(" "),a("tr",[a("td",[t._v("不按下且没有按住")]),t._v(" "),a("td",[t._v("0000 0000（0）")])]),t._v(" "),a("tr",[a("td",[t._v("不按下但按住（有点迷）")]),t._v(" "),a("td",[t._v("0000 0001（1）")])])])]),t._v(" "),a("p",[t._v("关于按住（toggle）这个状态的理解有点迷。")]),t._v(" "),a("p",[t._v("但是若只需要判断是不是按下，那就可以忽略低位。一种实现是 "),a("code",[t._v("GetKeyState(nVirtKey) & 0x80")]),t._v("，第二种是判断 "),a("code",[t._v("GetKeyState(nVirtKey) >= 0")]),t._v("。")]),t._v(" "),a("p",[t._v("注意这里的")]),t._v(" "),a("p",[t._v("对于这段的理解还是挺迷的，不过以后需要的时候再来深究吧。")]),t._v(" "),a("h2",{attrs:{id:"计时、获取系统时间戳"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计时、获取系统时间戳"}},[t._v("#")]),t._v(" 计时、获取系统时间戳")]),t._v(" "),a("p",[t._v("见"),a("a",{attrs:{href:"../time#msvc-%E4%B8%8B%E8%8E%B7%E5%8F%96%E6%9C%AC%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%97%B6%E9%97%B4%CE%BCs-%E7%BA%A7"}},[t._v("另一篇博客")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"文件管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件管理"}},[t._v("#")]),t._v(" 文件管理")]),t._v(" "),a("h3",{attrs:{id:"directory-management"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#directory-management"}},[t._v("#")]),t._v(" Directory Management")]),t._v(" "),a("p",[t._v("就是命令行中获取当前文件夹、更改当前文件夹（即"),a("code",[t._v("cd")]),t._v("）等操作。")]),t._v(" "),a("p",[t._v("微软官方文档链接："),a("a",{attrs:{href:"https://docs.microsoft.com/en-us/windows/win32/fileio/directory-management",target:"_blank",rel:"noopener noreferrer"}},[t._v("Directory Management"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("DWORD "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetCurrentDirectory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DWORD BUFSIZE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TCHAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetCurrentDirectory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TCHAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("具体详解请看"),a("a",{attrs:{href:"https://docs.microsoft.com/en-us/windows/win32/fileio/changing-the-current-directory",target:"_blank",rel:"noopener noreferrer"}},[t._v("微软官方文档"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"遍历文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历文件"}},[t._v("#")]),t._v(" 遍历文件")]),t._v(" "),a("p",[t._v("需要 "),a("code",[t._v("FindFirstFile")]),t._v(" "),a("code",[t._v("FindNextFile")]),t._v(" 和 "),a("code",[t._v("FindClose")]),t._v(" 函数。")]),t._v(" "),a("p",[t._v("具体详解请看"),a("a",{attrs:{href:"https://docs.microsoft.com/en-us/windows/win32/fileio/listing-the-files-in-a-directory",target:"_blank",rel:"noopener noreferrer"}},[t._v("微软官方文档"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"得到文件大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#得到文件大小"}},[t._v("#")]),t._v(" 得到文件大小")]),t._v(" "),a("p",[t._v("需要上面遍历文件得到的 File Handle。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("DWORD "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetFileSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  HANDLE  hFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  LPDWORD lpFileSizeHigh\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("第二参数可省。")]),t._v(" "),a("p",[t._v("具体详解请看[微软官方文档](https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-getfilesize）")])])}),[],!1,null,null,null);s.default=e.exports}}]);