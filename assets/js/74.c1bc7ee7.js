(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{462:function(s,t,a){"use strict";a.r(t);var n=a(3),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("blockquote",[t("p",[s._v("本篇的链接：https://docs.microsoft.com/zh-cn/learn/paths/csharp-first-steps/\n该教程浅显易懂，挺适合零基础编程基础的同学。\n当然也可以去看微软的其他入门教程。")])]),s._v(" "),t("h2",{attrs:{id:"hello-world"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hello-world"}},[s._v("#")]),s._v(" Hello World!")]),s._v(" "),t("p",[s._v("以下为一段 C# 代码的完整框架。")]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("CSharp")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Program")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            Console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("注意，C# 严格区分大小写。因此，不能使用 "),t("code",[s._v("console.WriteLine")]),s._v(" 或 "),t("code",[s._v("Console.writeline")]),s._v("。")]),s._v(" "),t("p",[s._v("该函数在末尾自带 "),t("code",[s._v("\\n")]),s._v("，等价于 "),t("code",[s._v('Console.Write("Hello World!\\n")')]),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"变量和数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量和数据类型"}},[s._v("#")]),s._v(" 变量和数据类型")]),s._v(" "),t("h3",{attrs:{id:"数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("数据类型")]),s._v(" "),t("th",[s._v("中文")]),s._v(" "),t("th",[s._v("代码中的写法")]),s._v(" "),t("th",[s._v("输出时的写法")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("code",[s._v("string")])]),s._v(" "),t("td",[s._v("字符串")]),s._v(" "),t("td",[t("code",[s._v('"Hello world!"')])]),s._v(" "),t("td",[t("code",[s._v("Hello world!")])])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("char")])]),s._v(" "),t("td",[s._v("字符")]),s._v(" "),t("td",[t("code",[s._v("'H'")])]),s._v(" "),t("td",[t("code",[s._v("H")])])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("int")])]),s._v(" "),t("td",[s._v("字整数")]),s._v(" "),t("td",[t("code",[s._v("123")])]),s._v(" "),t("td",[t("code",[s._v("123")])])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("decimal")])]),s._v(" "),t("td",[s._v("十进制文本")]),s._v(" "),t("td",[t("code",[s._v("12.3m")])]),s._v(" "),t("td",[t("code",[s._v("12.3")])])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("bool")])]),s._v(" "),t("td",[s._v("布尔类型")]),s._v(" "),t("td",[t("code",[s._v("true false")])]),s._v(" "),t("td",[t("code",[s._v("True Fause")])])])])]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[s._v("Console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("该语句会输出 "),t("code",[s._v("True")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"声明变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#声明变量"}},[s._v("#")]),s._v(" 声明变量")]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" firstName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("变量名称的规则和 C++、Python 等语言类似：")]),s._v(" "),t("ul",[t("li",[s._v("不许使用特殊字符")]),s._v(" "),t("li",[s._v("不能数字开头")]),s._v(" "),t("li",[s._v("不能是关键字")]),s._v(" "),t("li",[s._v("区分大小写")])]),s._v(" "),t("p",[s._v("下面是一些约定：")]),s._v(" "),t("ul",[t("li",[s._v("推荐使用 CamelCase，如 "),t("code",[s._v("thisIsCamelCase")]),s._v("。")]),s._v(" "),t("li",[s._v("请勿使用缩写（约定好的缩写除外，如 "),t("code",[s._v("msg")]),s._v("）")]),s._v(" "),t("li",[s._v("变量名不应包含其数据类型，如 "),t("code",[s._v("string strValue;")]),s._v(" 是不被推荐的。这可能是强大的 Visual Studio 能够通过智能感知查到变量名的类型。原文如下：")])]),s._v(" "),t("blockquote",[t("p",[s._v("你可能会看到使用类似 "),t("code",[s._v("string strValue;")]),s._v(" 样式的一些建议。这是几年前的热门样式。但是，大多数开发者不会再遵循此建议。")])]),s._v(" "),t("h3",{attrs:{id:"使用变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用变量"}},[s._v("#")]),s._v(" 使用变量")]),s._v(" "),t("p",[s._v("在对变量赋值前使用变量，会报错。")]),s._v(" "),t("p",[s._v("对变量赋值的方法和 C++ 相同。")]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" message "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" msg2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmsg2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"213"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h3",{attrs:{id:"var-类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#var-类型"}},[s._v("#")]),s._v(" var 类型")]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")])]),s._v(" msg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"this is a message"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[t("code",[s._v("var")]),s._v(" 和 C++ 的 "),t("code",[s._v("auto")]),s._v(" 一样，在初始化的时候，编译器根据等号右边的值的类型（在这里是 "),t("code",[s._v("string")]),s._v("），将变量名声明为相同类型。")]),s._v(" "),t("p",[s._v("注意这些都是在编译阶段完成的，也就是说，不能在之后改变其数据类型，再将 "),t("code",[s._v("int")]),s._v(" 值赋给 "),t("code",[s._v("msg")]),s._v("。")]),s._v(" "),t("p",[s._v("另外，"),t("code",[s._v("var")]),s._v(" 变量必须在使用的时候进行初始化。")]),s._v(" "),t("p",[t("code",[s._v("var")]),s._v(" 变量被叫做隐式类型本地变量。")]),s._v(" "),t("p",[s._v("为什么使用 "),t("code",[s._v("var")]),s._v(" 类型呢？")]),s._v(" "),t("blockquote",[t("p",[s._v("var 关键字已被 C# 社区广泛采用，因此，如果你查看书籍或联机中的代码示例，很有可能会看到使用的是 var 关键字，而不是实际的数据类型名称。因此，我们想确保在此模块中将它引入。"),t("br"),s._v("\n但 var 关键字在 C# 中具有重要用途。由于在编写高级代码之前你可能不甚了解，因此在某些情况下，初始化变量时，数据类型可能不太明显。实际上，在某些情况下， C# 可能会为代码提供一种新的数据类型，并可能无法提前为其指定可预测的命名。再说一次，这是 C# 的一项高级功能，我们将在其他模块中进行介绍。"),t("br"),s._v("\n开始之际，我们建议声明变量时继续使用实际的数据类型名称。声明变量时使用数据类型有助于你有目的性地编写代码。")])]),s._v(" "),t("h2",{attrs:{id:"基本字符串格式设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本字符串格式设置"}},[s._v("#")]),s._v(" 基本字符串格式设置")]),s._v(" "),t("p",[s._v("这部分的内容很少有教程在刚开始的时候专门用一节提过，但是个人认为很有必要。")]),s._v(" "),t("h3",{attrs:{id:"转义字符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#转义字符"}},[s._v("#")]),s._v(" 转义字符")]),s._v(" "),t("p",[s._v("和其他编程语言一样 "),t("code",[s._v("\\n")]),s._v(" "),t("code",[s._v("\\t")]),s._v(" "),t("code",[s._v('\\"')]),s._v(" "),t("code",[s._v("\\\\")]),s._v(" 等都是支持的。")]),s._v(" "),t("p",[s._v("C# 的 "),t("code",[s._v("\\u")]),s._v(" 是 utf-16 编码。如下面的代码：")]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[s._v("Console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\u4f60\\u597d，世界！"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("会输出 "),t("code",[s._v("你好，世界！")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"逐字字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逐字字符串"}},[s._v("#")]),s._v(" 逐字字符串")]),s._v(" "),t("p",[s._v("不少语言都支持 "),t("code",[s._v("跨行字符串")]),s._v(" （或 "),t("code",[s._v("verbatim string literal")]),s._v(" "),t("code",[s._v("raw string")]),s._v(" "),t("code",[s._v("字符串字面量")]),s._v("）这一特性，即在写字符串的时候加一定的前缀、后缀，即可逐字的保留字符串中的内容，无需转义。")]),s._v(" "),t("p",[s._v("如下面的代码：")]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" testString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('@"verbatim\n\\\nstring"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("等价于：")]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" testString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"verbatim\\n\\\\\\nstring"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("使用 "),t("code",[s._v("Console.WriteLine(testString)")]),s._v(" 会输出：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("verbatim\n\\\nstring\n")])])]),t("h3",{attrs:{id:"字符串串联"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串串联"}},[s._v("#")]),s._v(" 字符串串联")]),s._v(" "),t("p",[s._v("和 C++、Python 相同的是，C# 可以使用 "),t("code",[s._v("+")]),s._v(" 对字符串进行串联。")]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"World"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" message "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 也可以使用字符串和字符进行串联")]),s._v("\n")])])]),t("p",[s._v("但是 C# 还可以用 "),t("code",[s._v("字符串内插")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" message "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token interpolation-string"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('$"')]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token expression language-csharp"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(" ")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token expression language-csharp"}},[s._v("b")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('!"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("blockquote",[t("p",[s._v("字符串内插通过使用“模板”和一个或多个内插表达式将多个值合并为单个文本字符串。内插表达式是一个变量，由一个左大括号和一个右大括号符号 "),t("code",[s._v("{")]),s._v(" "),t("code",[s._v("}")]),s._v(" 括起来。 当文本字符串以 "),t("code",[s._v("$")]),s._v(" 字符为前缀时，该字符串将变为模板。")])]),s._v(" "),t("p",[s._v("这里涉及到两个概念 "),t("code",[s._v("内插表达式")]),s._v(" 和 "),t("code",[s._v("模板")]),s._v("。请读者务必分清。")]),s._v(" "),t("p",[s._v("甚至可以逐字文本和字符串内插嵌套。其中 "),t("code",[s._v("$")]),s._v(" 和 "),t("code",[s._v("@")]),s._v(" 的顺序可以交换，先解析字符串内插，再逐字文本。")]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" projectName "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"First-Project"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nConsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token interpolation-string"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('$@"C:\\Output\\')]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token expression language-csharp"}},[s._v("projectName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\\Data"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h3",{attrs:{id:"基本数字运算操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本数字运算操作"}},[s._v("#")]),s._v(" 基本数字运算操作")]),s._v(" "),t("p",[s._v("这部分 C# 和 C++ 相同。")]),s._v(" "),t("p",[s._v("C# 支持 "),t("code",[s._v("+=")]),s._v("、"),t("code",[s._v("-=")]),s._v("、"),t("code",[s._v("*=")]),s._v("、"),t("code",[s._v("++")]),s._v("、"),t("code",[s._v("--")]),s._v(" 等，并且 "),t("code",[s._v("++")]),s._v(" "),t("code",[s._v("--")]),s._v(" 也分为前缀加和后缀加。")]),s._v(" "),t("h2",{attrs:{id:"if-elseif-else"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if-elseif-else"}},[s._v("#")]),s._v(" if-elseif-else")]),s._v(" "),t("p",[s._v("这部分 C# 和 C++ 也完全相同。放一段代码以供参考：")]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("total "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    Console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"You win a new car!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("total "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    Console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"You win a new laptop!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("total "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    Console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"You win a trip for two!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    Console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"You win a kitten!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h2",{attrs:{id:"数组和-foreach"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组和-foreach"}},[s._v("#")]),s._v(" 数组和 foreach")]),s._v(" "),t("h3",{attrs:{id:"声明数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#声明数组"}},[s._v("#")]),s._v(" 声明数组")]),s._v(" "),t("p",[s._v("下面以声明一个 String 类型数组为例：")]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v(" firstArray "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("注意到，执行该语句后，firstArray 的元素将被初始化。")]),s._v(" "),t("p",[s._v("那为什么不初始化单个的变量，导致在使用变量前会报错说“未初始化”呢？")]),s._v(" "),t("p",[s._v("根据 "),t("a",{attrs:{href:"https://stackoverflow.com/a/8933935/12208030",target:"_blank",rel:"noopener noreferrer"}},[s._v("Stack Overflow"),t("OutboundLink")],1),s._v(" 的回答，对于变量也是会进行初始化的，但是，由于在未初始化之前使用变量是一个很像 bug 的行为，于是就规定这种行为不合法了。")]),s._v(" "),t("h3",{attrs:{id:"对元素赋值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对元素赋值"}},[s._v("#")]),s._v(" 对元素赋值")]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[s._v("firstArray"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"firstElement"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nfirstArray"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"secondElement"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nfirstArray"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"thirdElement"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h3",{attrs:{id:"获取数组元素的值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取数组元素的值"}},[s._v("#")]),s._v(" 获取数组元素的值")]),s._v(" "),t("p",[s._v("结合内插表达式，可以写出如下语句：")]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[s._v("Console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token interpolation-string"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('$"First: ')]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token expression language-csharp"}},[s._v("firstArray"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nConsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token interpolation-string"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('$"Second: ')]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token expression language-csharp"}},[s._v("firstArray"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nConsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token interpolation-string"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('$"Third: ')]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token expression language-csharp"}},[s._v("firstArray"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("另外，可使用 "),t("code",[s._v("firstArray.Length")]),s._v(" 获取数组的长度。")]),s._v(" "),t("h3",{attrs:{id:"foreach"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#foreach"}},[s._v("#")]),s._v(" foreach")]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v(" names "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Bob"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Conrad"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Grant"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("foreach")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")])]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" names"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    Console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("上述代码的运行结果：")]),s._v(" "),t("div",{staticClass:"language-cs extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cs"}},[t("code",[s._v("Bob\nConrad\nGrant\n")])])]),t("p",[s._v("不过，对于 "),t("code",[s._v("string[] name = new string[10]")]),s._v(" 这种数组，无论后面的变量是否使用，都会被遍历到。")]),s._v(" "),t("h2",{attrs:{id:"使用-c-创建具有约定、空格和注释的易读代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-c-创建具有约定、空格和注释的易读代码"}},[s._v("#")]),s._v(" 使用 C# 创建具有约定、空格和注释的易读代码")]),s._v(" "),t("p",[s._v("这部分并非针对 C#，而是针对所有开发者，写代码应该注意以下几点：")]),s._v(" "),t("ul",[t("li",[s._v("应该正确地使用首行缩进")]),s._v(" "),t("li",[s._v("写代码应该多使用空格，以更清楚地传达代码意图")]),s._v(" "),t("li",[s._v("使用代码注释，但也要有原则的使用")])]),s._v(" "),t("p",[s._v("这部分讲的深入浅出，推荐阅读：")]),s._v(" "),t("p",[s._v("https://docs.microsoft.com/zh-cn/learn/modules/csharp-readable-code/")])])}),[],!1,null,null,null);t.default=e.exports}}]);