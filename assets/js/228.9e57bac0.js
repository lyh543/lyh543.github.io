(window.webpackJsonp=window.webpackJsonp||[]).push([[228],{619:function(s,n,t){"use strict";t.r(n);var e=t(3),a=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("Linux 和 MacOS 系统都自带了 Python，对于初学者来说是件好事，不用安装也能直接使用。但是在工程开发上往往需要在不同的项目使用不同的 Python 版本，相同的 Python 下使用不同的依赖。")]),s._v(" "),n("p",[s._v("在最新的 Ubuntu、Manjaro 等系统中直接使用 "),n("code",[s._v("pip install")]),s._v(" 安装依赖时，会提示可能会破坏系统依赖（"),n("a",{attrs:{href:"https://peps.python.org/pep-0668/",target:"_blank",rel:"noopener noreferrer"}},[s._v("PEP 668"),n("OutboundLink")],1),s._v("）。所以Python 官方的态度是不推荐直接使用系统自带的 Python 环境来安装依赖、进行过多的开发工作，而是推荐使用虚拟环境，或者干脆装一个新的 Python。")]),s._v(" "),n("p",[s._v("因此，我们需要工具来管理 Python 版本和虚拟环境。")]),s._v(" "),n("ul",[n("li",[s._v("Pyenv：Python 版本管理工具，类似于 NodeJS 的 "),n("code",[s._v("nvm")])]),s._v(" "),n("li",[s._v("Pipenv：Python 虚拟环境管理工具，类似于 NodeJS 的 "),n("code",[s._v("npm")]),s._v("。Python 还有 "),n("code",[s._v("virtualenv")]),s._v("、"),n("code",[s._v("venv")]),s._v(" 可以使用，Pipenv 的优势在于提供了 lock 文件，保证在不同的环境使用相同的依赖运行程序。")])]),s._v(" "),n("p",[s._v("Pyenv + Pipenv 二者还会有联动："),n("strong",[s._v("如果 pipenv 的版本管理文件 "),n("code",[s._v("Pipfile")]),s._v(" 指定了 Python 版本，"),n("code",[s._v("pipenv shell")]),s._v(" 进入虚拟环境时，会自动使用 "),n("code",[s._v("pyenv")]),s._v(" 安装的 Python 版本创建虚拟环境，确保了项目使用的 Python 版本与 "),n("code",[s._v("Pipfile")]),s._v(" 中的声明一致")]),s._v("。安装好 Pyenv 和 Pipenv 以后，就不用再操心当前的 Python 和项目的 Python 版本是否一致了。")]),s._v(" "),n("h2",{attrs:{id:"安装-pyenv"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装-pyenv"}},[s._v("#")]),s._v(" 安装 Pyenv")]),s._v(" "),n("p",[s._v("安装 Pyenv，然后安装 Python 3.10：")]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" https://pyenv.run "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置好 .bashrc 以后")]),s._v("\npyenv "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.10")]),s._v("\npyenv shell "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.10")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" python      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 /home/liu/.pyenv/shims/python")]),s._v("\npython --version  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 Python 3.10.15")]),s._v("\n\npyenv versions    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询 pyenv 安装的所有 Python 版本")]),s._v("\n")])])]),n("h2",{attrs:{id:"setup-pipenv"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#setup-pipenv"}},[s._v("#")]),s._v(" Setup Pipenv")]),s._v(" "),n("p",[s._v("安装 Pipenv")]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("pip "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" pipenv  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pyenv shell 3.10 以后，这里使用的是 pyenv 安装的 Python")]),s._v("\npipenv shell        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入虚拟环境")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在虚拟环境中安装现有依赖")]),s._v("\npipenv "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n")])])]),n("p",[s._v("添加现有依赖也需要使用 "),n("code",[s._v("pipenv")]),s._v("，因为使用 "),n("code",[s._v("pip")]),s._v(" 安装的依赖不会写到 "),n("code",[s._v("Pipfile")]),s._v(" 里。")]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("pipenv "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("package"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),n("h2",{attrs:{id:"运行项目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运行项目"}},[s._v("#")]),s._v(" 运行项目")]),s._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("pipenv shell\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在虚拟环境中运行项目")]),s._v("\npython3 src/main.py\n")])])]),n("h2",{attrs:{id:"为项目构建-docker-镜像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为项目构建-docker-镜像"}},[s._v("#")]),s._v(" 为项目构建 Docker 镜像")]),s._v(" "),n("p",[s._v("在 Docker 里构建容器也需要下载依赖。和开发环境不同的是，构建 Docker 镜像不需要 Pyenv，也不需要创建虚拟环境，所以会有一点区别。")]),s._v(" "),n("div",{staticClass:"language-dockerfile extra-class"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# use mirror of python:3.10")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token instruction"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" python:3.10")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# install pipenv using tsinghua mirror")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token instruction"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" pip install pipenv -i https://pypi.tuna.tsinghua.edu.cn/simple")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token instruction"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token instruction"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" Pipfile Pipfile.lock /app/")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token instruction"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" pipenv install --deploy --system")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token instruction"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . /app")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token instruction"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"python"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"src/main.py"')]),s._v("]")]),s._v("\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);