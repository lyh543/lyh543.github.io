(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{628:function(e,s,a){"use strict";a.r(s);var t=a(3),n=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"急速裁剪视频-不重新编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#急速裁剪视频-不重新编码"}},[e._v("#")]),e._v(" 急速裁剪视频（不重新编码）")]),e._v(" "),a("p",[e._v("开始接触 "),a("code",[e._v("ffmpeg")]),e._v(" 就是在裁剪视频长度的时候。Premier、格式工厂、Windows 照片自带的裁剪等软件都需要对视频进行重新编码。而 "),a("code",[e._v("ffmpeg")]),e._v(" 则可以通过设置参数 "),a("code",[e._v("-c copy")]),e._v("，在创建视频的时候不重新编码，这样的好处是"),a("strong",[e._v("裁剪的过程基本就是文件复制的过程")]),e._v("，CPU 不再成为性能瓶颈，SSD 上速度是真滴快。")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("ffmpeg -i input.mp4 -ss 00:01:00 -t 01:00:00 -c copy output.mp4\n")])])]),a("p",[a("code",[e._v("-i")]),e._v(" 参数指定输入文件，"),a("code",[e._v("-ss")]),e._v(" 指定开始裁剪的时间，"),a("code",[e._v("-t")]),e._v(" 指定裁剪总长度，"),a("code",[e._v("-c")]),e._v(" 指定编码格式。")]),e._v(" "),a("h2",{attrs:{id:"改变码率和分辨率"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#改变码率和分辨率"}},[e._v("#")]),e._v(" 改变码率和分辨率")]),e._v(" "),a("ul",[a("li",[e._v("限制码率：使用参数 "),a("code",[e._v("-b 2M")]),e._v(" 将视频平均码率限制在 2Mbps。")]),e._v(" "),a("li",[e._v("修改视频分辨率：使用参数 "),a("code",[e._v("-vf scale=640:480")]),e._v("，或省略一个参数 "),a("code",[e._v("-vf scale=-1:480")]),e._v("，程序将自动按比例缩放。")])]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("ffmpeg -i input.mp4 -b 2M -vf "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("scale")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("-1:720 output.mp4\n")])])]),a("p",[e._v("需要注意的是，过低的码率会导致画质变低，甚至出现花屏。")]),e._v(" "),a("h2",{attrs:{id:"使用-cuda-加速重新编码软件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-cuda-加速重新编码软件"}},[e._v("#")]),e._v(" 使用 CUDA 加速重新编码软件")]),e._v(" "),a("p",[e._v("查看可使用的硬件加速：")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" ffmpeg -hwaccels\n:: 略过一堆输出\nHardware acceleration methods:\ncuda\ndxva2\nqsv\nd3d11va\nvulkan\n")])])]),a("p",[e._v("这里由于使用的是 N 卡，于是确定使用 "),a("code",[e._v("cuda")]),e._v("。")]),e._v(" "),a("p",[e._v("确定编码格式和对应的编码器，带了 "),a("code",[e._v("nv")]),e._v(" 的基本就是 NVIDIA 的编码/解码器：")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" ffmpeg -codecs "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("find")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"nv"')]),e._v("\n:: 略过一堆输出\n D.V.L. dsicinvideo          Delphine Software International CIN video\n DEV.LS h264                 H.264 / AVC / MPEG-4 AVC / MPEG-4 part "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("decoders: h264 h264_qsv h264_cuvid "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("encoders: libx264 libx264rgb h264_amf h264_nvenc h264_qsv nvenc nvenc_h264 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n DEV.L. hevc                 H.265 / HEVC "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("High Efficiency Video Coding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("decoders: hevc hevc_qsv hevc_cuvid "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("encoders: libx265 nvenc_hevc hevc_amf hevc_nvenc hevc_qsv "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n D.V.L. idcin                "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("id")]),e._v(" Quake II CIN video "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("decoders: idcinvideo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n D.VIL. wnv1                 Winnov WNV1\n D.AIL. twinvq               VQF TwinVQ\n")])])]),a("p",[e._v("我们使用 "),a("code",[e._v("H.265")]),e._v("("),a("code",[e._v("HEVC")]),e._v(") 格式编码，用 CUDA 加速编码过程。于是选择使用 "),a("code",[e._v("hevc_nvenc")]),e._v(" 作为编码器。")]),e._v(" "),a("p",[e._v("最后写命令：")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("ffmpeg -hwaccel cuda -i input.mp4 -c:v hevc_nvenc output.mp4\n")])])]),a("p",[e._v("其中 "),a("code",[e._v("-c")]),e._v(" 参数放在 "),a("code",[e._v("-i")]),e._v(" 后，表示修改编码格式（在 "),a("code",[e._v("-i")]),e._v(" 前则是解码格式）；"),a("code",[e._v("-c:v")]),e._v(" 是修改视频编码格式。")]),e._v(" "),a("p",[e._v("如果提示 Nvidia 驱动版本太低，需要更新驱动。")]),e._v(" "),a("h2",{attrs:{id:"下载-m3u8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下载-m3u8"}},[e._v("#")]),e._v(" 下载 m3u8")]),e._v(" "),a("p",[e._v("m3u8 是一种流媒体格式，常用于在线观看、直播等。如腾讯课堂的回看就是以这个格式提供的。")]),e._v(" "),a("p",[e._v("网上有不少 m3u8 下载器，我一直使用的是 "),a("a",{attrs:{href:"https://github.com/nilaoda/M3U8-Downloader",target:"_blank",rel:"noopener noreferrer"}},[e._v("nilaoda/M3U8-Downloader"),a("OutboundLink")],1),e._v("。我也知道它用到了 "),a("code",[e._v("ffmpeg")]),e._v("，不过一直以为它只是做了视频合并。")]),e._v(" "),a("p",[e._v("今天使用某 APP 时，刚开始没有找到现成的将加密 m3u8 转为 mp4 的轮子，于是自己想按照"),a("a",{attrs:{href:"https://www.jianshu.com/p/1b0adcc7b426",target:"_blank",rel:"noopener noreferrer"}},[e._v("博客"),a("OutboundLink")],1),e._v(" 手写一个 shell 脚本实现。但看到最后，没想到 ffmpeg 还能一行（从网络或从本地）下载 m3u8 并转为单文件！nb！")]),e._v(" "),a("p",[e._v("下面给出三个版本的用法（一般采用第一个就行，最快）：")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 不重新编码")]),e._v("\nffmpeg -allowed_extensions ALL -i "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"URL"')]),e._v(" -c:v copy output.mp4\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 使用默认编码进行编码（应该是 h264 吧）")]),e._v("\nffmpeg -allowed_extensions ALL -i "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"URL"')]),e._v(" output.mp4\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 使用 CUDA 编码为 h265")]),e._v("\nffmpeg -allowed_extensions ALL -hwaccel cuda -i "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"URL"')]),e._v(" -c:v hevc_nvenc output.mp4\n")])])]),a("ul",[a("li",[a("code",[e._v("-allowed_extensions ALL")]),e._v("：m3u8 可能涉及到加密，需要读取 "),a("code",[e._v(".key")]),e._v(" 秘钥文件；而 "),a("code",[e._v("ffmpeg")]),e._v(" 默认不让读取媒体格式以外的格式，所以需要加这个参数允许读取所有格式；")]),e._v(" "),a("li",[a("code",[e._v('"URL"')]),e._v("：替换为本地路径或 HTTP URL 均可。也可以用 "),a("code",[e._v("wget")]),e._v(" 或 "),a("code",[e._v("curl")]),e._v(" 将 URL 中的 m3u8 源文件下载下来，再运行 "),a("code",[e._v("ffmpeg")]),e._v("；")]),e._v(" "),a("li",[a("code",[e._v("output.mp4")]),e._v("：输出文件，没什么好说的。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);