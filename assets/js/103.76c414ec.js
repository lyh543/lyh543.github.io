(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{492:function(a,t,s){"use strict";s.r(t);var r=s(3),e=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"前置需求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前置需求"}},[a._v("#")]),a._v(" 前置需求")]),a._v(" "),t("ul",[t("li",[a._v("一个域名，且已以 A 记录指向服务器")])]),a._v(" "),t("h2",{attrs:{id:"docker-一键安装法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-一键安装法"}},[a._v("#")]),a._v(" Docker 一键安装法")]),a._v(" "),t("h3",{attrs:{id:"安装-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker"}},[a._v("#")]),a._v(" 安装 Docker")]),a._v(" "),t("p",[a._v("一键脚本安装。如果不行，可以尝试到 Docker 官网上找方法，或者参考"),t("RouterLink",{attrs:{to:"/notes/linux/docker.html#手动安装"}},[a._v("另一篇博文")]),a._v("。")],1),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -s https://get.docker.com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("h3",{attrs:{id:"安装-v2ray-服务器端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-v2ray-服务器端"}},[a._v("#")]),a._v(" 安装 V2Ray 服务器端")]),a._v(" "),t("p",[a._v("一行命令，但是有需要修改的参数。")]),a._v(" "),t("blockquote",[t("p",[a._v("参考：https://github.com/pengchujin/v2rayDocker")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run -d --name v2ray -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("443")]),a._v(":443 -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(":80 -v "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/.caddy:/root/.caddy pengchujin/v2ray_ws:0.10 YOURDOMAIN.COM V2RAY_WS "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),a._v(" 3s "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" logs v2ray\n")])])]),t("ul",[t("li",[t("code",[a._v("YOURDOMAIN.COM")]),a._v("：指向你的服务器 IP 的域名")])]),a._v(" "),t("p",[a._v("修改好上述命令后，粘贴到命令行中执行。")]),a._v(" "),t("p",[a._v("三条命令监控 V2Ray：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" start v2ray      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启动 v2ray 并重新申请 SSL 证书")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" stop v2ray       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 停止 v2ray")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" logs v2ray       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 输出日志，可在这里查看 vmess 链接")]),a._v("\n")])])]),t("p",[a._v("链接可在 "),t("code",[a._v("docker logs v2ray")]),a._v(" 中查看。")]),a._v(" "),t("p",[a._v("logs 中有一个安卓链接，一个 ios 链接，PC 用安卓的链接即可。")]),a._v(" "),t("h3",{attrs:{id:"shell-脚本安装法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-脚本安装法"}},[a._v("#")]),a._v(" shell 脚本安装法")]),a._v(" "),t("p",[a._v("https://github.com/233boy/v2ray/tree/master")]),a._v(" "),t("h2",{attrs:{id:"客户端推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#客户端推荐"}},[a._v("#")]),a._v(" 客户端推荐")]),a._v(" "),t("ul",[t("li",[a._v("Windows: "),t("a",{attrs:{href:"https://github.com/2dust/v2rayN/releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("V2RayN"),t("OutboundLink")],1)]),a._v(" "),t("li",[a._v("Android: "),t("a",{attrs:{href:"https://github.com/2dust/v2rayNG",target:"_blank",rel:"noopener noreferrer"}},[a._v("V2RayNG"),t("OutboundLink")],1)]),a._v(" "),t("li",[a._v("Linux: "),t("a",{attrs:{href:"https://hub.docker.com/r/mzz2017/v2raya",target:"_blank",rel:"noopener noreferrer"}},[a._v("V2RayA docker"),t("OutboundLink")],1),a._v(" "),t("code",[a._v("docker run -d --restart=always --privileged --network=host --name v2raya -v /etc/v2raya:/etc/v2raya mzz2017/v2raya")])]),a._v(" "),t("li",[a._v("MacOS: "),t("a",{attrs:{href:"https://hub.docker.com/r/mzz2017/v2raya",target:"_blank",rel:"noopener noreferrer"}},[a._v("V2RayA docker"),t("OutboundLink")],1),a._v(" "),t("code",[a._v("docker run -d -p 2017:2017 -p 20170-20172:20170-20172 --restart=always --name v2raya -v /etc/v2raya:/etc/v2raya mzz2017/v2raya")])])]),a._v(" "),t("h2",{attrs:{id:"部分错误及解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部分错误及解决方案"}},[a._v("#")]),a._v(" 部分错误及解决方案")]),a._v(" "),t("h3",{attrs:{id:"更新-v2ray-客户端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更新-v2ray-客户端"}},[a._v("#")]),a._v(" 更新 V2Ray 客户端")]),a._v(" "),t("p",[a._v("如果服务器给了 V2Ray 链接，但本地无法使用这个成功连接，可能是镜像中的 V2Ray 版本太老。下面将下载最新的 V2Ray 客户端并替换。")]),a._v(" "),t("p",[a._v("首先进入容器内的命令行：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it v2ray /bin/sh\n")])])]),t("p",[a._v("在容器中的命令行中依次执行：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /usr/bin\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://github.com/v2ray/v2ray-core/releases/latest/download/v2ray-linux-64.zip\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("unzip")]),a._v(" v2ray-linux-64.zip v2ray v2ctl\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" v2ray-linux-64.zip\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v("\n")])])]),t("p",[a._v("退出容器后，再重启 V2Ray 客户端：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" restart v2ray\n")])])]),t("h2",{attrs:{id:"配置-bbr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置-bbr"}},[a._v("#")]),a._v(" 配置 BBR")]),a._v(" "),t("p",[a._v("搭上梯子以后，发现有时候丢包率有 40% 左右。")]),a._v(" "),t("p",[a._v("Google 了一下，说是可以开启 BBR 以实现加速。BBR 是什么、为什么能提升代理的速度、如何开启，可以看下面两篇博客。")]),a._v(" "),t("p",[a._v("注意，BBR 是针对 TCP 发包的，也就是说，设置好以后，对于所有代理软件和服务器上的所有网页等都会生效。")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://tech.jandou.com/CentOS7-Google-BBR.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("BBR是什么？"),t("OutboundLink")],1)]),a._v(" "),t("blockquote",[t("p",[a._v("转载："),t("a",{attrs:{href:"https://www.moerats.com/archives/612/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Ubuntu 18.04/18.10快速开启Google BBR的方法"),t("OutboundLink")],1)])]),a._v(" "),t("p",[a._v("提示：Ubuntu 18.10 依然可以用该方法开启 BBR，而对于 19.04 和 20.04、貌似官方直接给你开启了 BBR，不需要重复开启了。")]),a._v(" "),t("ol",[t("li",[a._v("修改系统变量并保存生效")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("su")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"net.core.default_qdisc=fq"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" /etc/sysctl.conf\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"net.ipv4.tcp_congestion_control=bbr"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" /etc/sysctl.conf\nsysctl -p\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[a._v("查看内核是否已开启 BBR")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ sysctl net.ipv4.tcp_available_congestion_control\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示以下即已开启：")]),a._v("\nnet.ipv4.tcp_available_congestion_control "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" bbr cubic reno\n")])])]),t("ol",{attrs:{start:"3"}},[t("li",[a._v("查看 BBR 是否启动")])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("$ lsmod "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" bbr\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示以下即启动成功：")]),a._v("\ntcp_bbr                "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("20480")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("14")]),a._v("\n")])])]),t("h2",{attrs:{id:"借助国内的服务器进行中转"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#借助国内的服务器进行中转"}},[a._v("#")]),a._v(" 借助国内的服务器进行中转")]),a._v(" "),t("p",[a._v("有些时候会发现，即使开启了 BBR，速度依旧很慢。但是如果经由国内的服务器中转（即本地客户端 <-> 国内服务器 <-> 国外服务器 <-> Google），速度会快一些。")]),a._v(" "),t("p",[a._v("下面将基于国外服务器已经按"),t("a",{attrs:{href:"#%E5%AE%89%E8%A3%85-v2ray-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF"}},[a._v("上文")]),a._v("搭建好 V2Ray 客户端的情形下，在本地客户端进行反向代理。")]),a._v(" "),t("p",[a._v("假设国外服务器的域名为 "),t("code",[a._v("proxy-server.mydomain.com")]),a._v("，国内服务器域名为 "),t("code",[a._v("transit-server.mydomain.com")]),a._v("。")]),a._v(" "),t("h3",{attrs:{id:"国外服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#国外服务器"}},[a._v("#")]),a._v(" 国外服务器")]),a._v(" "),t("p",[a._v("国外服务器已经按照上文搭建好服务器，并得到了其 VMESS 链接。")]),a._v(" "),t("h3",{attrs:{id:"国内服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#国内服务器"}},[a._v("#")]),a._v(" 国内服务器")]),a._v(" "),t("p",[a._v("国内服务器需要使用反向代理。可以用 Nginx/Apache 实现，也可以用 Caddy 实现。这里使用 Caddy。")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://caddyserver.com/docs/install",target:"_blank",rel:"noopener noreferrer"}},[a._v("安装 Caddy"),t("OutboundLink")],1),a._v(" 后，在 "),t("code",[a._v("/etc/caddy/Caddyfile")]),a._v(" 中写入：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("transit-server.mydomain.com {\n    reverse_proxy proxy-server.mydomain.com:443 {\n        header_up Host {http.reverse_proxy.upstream.hostport}\n    }\n}\n")])])]),t("p",[a._v("然后重启（或重载） Caddy：")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl stop caddy\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl start caddy\n")])])]),t("h3",{attrs:{id:"本地客户端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地客户端"}},[a._v("#")]),a._v(" 本地客户端")]),a._v(" "),t("p",[a._v("将国外服务器的 VMESS 链接导入 V2Ray 客户端后显示，配置的服务器域名为 "),t("code",[a._v("proxy-server.mydomain.com")]),a._v("。将域名改为 "),t("code",[a._v("transit-server.mydomain.com")]),a._v("，其他配置不变即可。")])])}),[],!1,null,null,null);t.default=e.exports}}]);