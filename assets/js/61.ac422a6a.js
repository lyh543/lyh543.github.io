(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{417:function(e,t,s){"use strict";s.r(t);var v=s(3),_=Object(v.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"格式化代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#格式化代码"}},[e._v("#")]),e._v(" 格式化代码")]),e._v(" "),t("p",[e._v("Visual Studio 2017，在 "),t("code",[e._v("编辑")]),e._v(" - "),t("code",[e._v("高级")]),e._v("  - "),t("code",[e._v("设置文档的格式")]),e._v("。快捷键为 "),t("code",[e._v("Ctrl+D")]),e._v("，"),t("code",[e._v("Ctrl+E")]),e._v("。")]),e._v(" "),t("h2",{attrs:{id:"给visual-studio的头文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#给visual-studio的头文件"}},[e._v("#")]),e._v(" 给Visual Studio的头文件")]),e._v(" "),t("p",[t("a",{attrs:{href:"/blob/header-files-for-Visual-Studio/catch.hpp"}},[e._v("catch.hpp")]),t("br"),e._v(" "),t("a",{attrs:{href:"/blob/header-files-for-Visual-Studio/stdc++.h"}},[e._v("bits/stdc++.h")])]),e._v(" "),t("p",[e._v("放到"),t("code",[e._v("C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Tools\\MSVC\\14.15.26726\\include")]),e._v("目录下")]),e._v(" "),t("p",[e._v("因版本不同而不同")]),e._v(" "),t("h2",{attrs:{id:"通过宏定义判断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通过宏定义判断"}},[e._v("#")]),e._v(" 通过宏定义判断")]),e._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("ifdef")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[e._v("_MSC_VER")])]),e._v("\n")])])]),t("h2",{attrs:{id:"更改程序编码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更改程序编码"}},[e._v("#")]),e._v(" 更改程序编码")]),e._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[e._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("pragma")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("execution_character_set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")])]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"utf-8"')]),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")])])]),e._v("\n")])])]),t("h2",{attrs:{id:"预编译头-pch-h-或-stdafx-h"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#预编译头-pch-h-或-stdafx-h"}},[e._v("#")]),e._v(" 预编译头 "),t("code",[e._v("pch.h")]),e._v(" 或 "),t("code",[e._v("StdAfx.h")])]),e._v(" "),t("h3",{attrs:{id:"预编译头的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#预编译头的作用"}},[e._v("#")]),e._v(" 预编译头的作用")]),e._v(" "),t("p",[e._v("用 Visual Studio 编程的小白都有过这样的经历：每次新建一个项目都会给我建一个 "),t("code",[e._v("pch.h")]),e._v(" （或 "),t("code",[e._v("StdAfx.h")]),e._v("，下略），删掉以后还不能通过编译，还得到设置里面关掉。")]),e._v(" "),t("p",[e._v("今天在刷知乎："),t("a",{attrs:{href:"https://www.zhihu.com/question/58547318/answer/157951158",target:"_blank",rel:"noopener noreferrer"}},[e._v("什么c++要“在头文件中声明，在源文件中定义”？"),t("OutboundLink")],1),e._v("的时候，突然看到了"),t("strong",[e._v("预编译头")]),e._v("这四个字，于是打算研究一下。")]),e._v(" "),t("p",[e._v("预编译头的出现，还得从 C/C++ 程序编译原理说起。")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("#include")]),e._v("是什么？一条预处理指令。于是你就需要搞清楚预处理在c++程序的编译过程中大约发生在什么环节。以下引用 cppreference.com:")]),e._v(" "),t("blockquote",[t("p",[e._v("The preprocessor is executed at translation phase 4, before the compilation. The result of preprocessing is a single file which is then passed to the actual compiler.")])]),e._v(" "),t("p",[e._v("C++ 的预处理器在编译之前执行，它看到 "),t("code",[e._v("#include")]),e._v(" 指令，就会把那个文件的内容替换到当前位置。其它的预处理指令例如"),t("code",[e._v("#define")]),e._v("、"),t("code",[e._v("#ifdef")]),e._v(" 等也在这个阶段被执行、并产生相应的内容。预处理器执行完成后，所有的预处理指令都会被移除。其结果是一个单个头的大文件（我猜测这文件只存在于内存里），这个文件才会被进一步传给编译器做编译。")])]),e._v(" "),t("p",[e._v("也就是说，对于每一次 #include，都会把被 include 文件复制进源代码，得到一个超级长的代码。这也解释了重复编译头文件是不被 Visual Studio 允许的：不然会出现重名函数。")]),e._v(" "),t("p",[e._v("于是，出现了预编译头：")]),e._v(" "),t("p",[e._v("我们把一些不经常修改的代码放到 "),t("code",[e._v("pch.h")]),e._v(" 文件里（通常是 "),t("code",[e._v("#include")]),e._v(" 系统的头文件、宏定义 "),t("code",[e._v("#define")]),e._v("）。"),t("br"),e._v("\n之后进行编译的时候，系统先将预编译头编译为 "),t("code",[e._v(".pch")]),e._v(" 文件，再编译我们的其他 "),t("code",[e._v(".cpp")]),e._v(" 文件。"),t("br"),e._v("\n在之后的编译，要是 "),t("code",[e._v("pch.h")]),e._v("没有发生修改，则不会重新编译该文件。由于系统自带的库文件很大，不重新编译这些文件，能够加速我们后期的编译过程。")]),e._v(" "),t("p",[e._v("同时，引用的这一段话也解释了，为什么单独的 "),t("code",[e._v("pch.h")]),e._v(" 文件不能编译，必须要有一个仅有 "),t("code",[e._v('#include"pch.h"')]),e._v(" 一句话的 "),t("code",[e._v("pch.cpp")]),e._v("：C/C++ 是不直接编译 "),t("code",[e._v("pch.h")]),e._v(" 文件的，是把该文件的代码复制到了 "),t("code",[e._v("pch.cpp")]),e._v(" 文件，然后对 "),t("code",[e._v("pch.cpp")]),e._v(" 文件进行编译的。")]),e._v(" "),t("h3",{attrs:{id:"预编译头的使用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#预编译头的使用方法"}},[e._v("#")]),e._v(" 预编译头的使用方法")]),e._v(" "),t("ol",[t("li",[e._v("现在 Visual Studio 新建项目都是自带了预编译头的，如果没有，需要自己创建一个 "),t("code",[e._v(".h")]),e._v(" 和同名的 "),t("code",[e._v(".cpp")]),e._v(" 文件，名字可以自取，不过 Visual Studio 使用的是 "),t("code",[e._v("pch.h")]),e._v("。")]),e._v(" "),t("li",[e._v("如果是自己创建，还需要把 "),t("code",[e._v("项目")]),e._v(" - "),t("code",[e._v("（项目名）属性")]),e._v(" - "),t("code",[e._v("C/C++")]),e._v(" - "),t("code",[e._v("预编译头")]),e._v(" - "),t("code",[e._v("预编译头")]),e._v(" 改为 "),t("code",[e._v("使用（/Yu）")]),e._v("，后面的文件名改为刚才新建的 "),t("code",[e._v(".h")]),e._v(" 文件。")]),e._v(" "),t("li",[e._v("如果是新建的项目，上面 Visual Studio 已经帮我们做好了，我们以后只需要：\na. 在预编译头文件中加入不经常修改的预处理命令，如 "),t("code",[e._v("#define")]),e._v("、"),t("code",[e._v("#include")]),e._v(" 系统头文件或第三方库的头文件；"),t("br"),e._v("\nb. 在所有你的 "),t("code",[e._v(".cpp")]),e._v(" "),t("strong",[e._v("文件的第一句")]),e._v("写上 "),t("code",[e._v("#include")]),e._v(" 你的预编译头（必须是第一句，不然编译不过）；"),t("br"),e._v("\nc. 如果你的其他自定义的 "),t("code",[e._v(".h")]),e._v(" 文件不需要库函数，可以不包含预编译头，否则写上；"),t("br"),e._v("\nd. 不用管预编译头的同名 "),t("code",[e._v(".cpp")]),e._v(" 文件。")])])])}),[],!1,null,null,null);t.default=_.exports}}]);