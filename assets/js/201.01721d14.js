(window.webpackJsonp=window.webpackJsonp||[]).push([[201],{591:function(t,a,s){"use strict";s.r(a);var n=s(3),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("对于同时在写开源项目和公司私有项目的码农，不同的项目可能就需要选择不同的邮箱。")]),t._v(" "),a("p",[t._v("最直接的方案是给每个 repo 设置一遍，毕竟 Git 自带了 "),a("code",[t._v("--local")]),t._v(" "),a("code",[t._v("--global")]),t._v(" "),a("code",[t._v("--system")]),t._v(" 三个级别的设置。我之前的办法就是 "),a("code",[t._v("global")]),t._v(" 写个人邮箱，然后写一个脚本用于设置当前项目的邮箱为公司邮箱（大概如下），放在 PATH 下，每新建 / clone 一个 repo 的时候跑一遍。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git-init.sh or git-init.ps1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --local user.email your.work@company.com\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --local user.name  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your Name"')]),t._v("\n")])])]),a("p",[t._v("当然，坏处也是十分显然的，每个公司项目都得设置一遍，很容易忘记。于是就有了这篇博客。")]),t._v(" "),a("p",[t._v("Git 对于这种“根据路径设置邮箱名”的需求，在 "),a("code",[t._v("git config")]),t._v(" 里提供了 "),a("a",{attrs:{href:"https://git-scm.com/docs/git-config#_conditional_includes",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("IncludeIf")]),t._v(" 参数"),a("OutboundLink")],1),t._v("（似乎大小写不敏感）。")]),t._v(" "),a("div",{staticClass:"language-ini extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ~/.gitconfig")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token section"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("email")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("lyh543@outlook.com")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("lyh543")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token section"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v('includeIf "gitdir:bitme/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v(" # 路径必须以短横线结尾\n    "),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("path")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v(".bitme.gitconfig")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token section"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("pull")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("rebase")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token section"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("diff")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("submodule")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("log")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token section"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("defaultbranch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("master")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token section"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("http")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("proxy")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("http://127.0.0.1:17296")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token section"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("https")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("proxy")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("http://127.0.0.1:17296")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token section"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("core")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("editor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("code --wait")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("autocrlf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("input")]),t._v("\n")])])]),a("p",[t._v("上面这段 "),a("code",[t._v("includeIf")]),t._v(" 的意思是，如果当前 repo 路径"),a("strong",[t._v("包含")]),t._v(" "),a("code",[t._v("bitme/")]),t._v("，就读取 "),a("code",[t._v(".bitme.gitconfig")]),t._v("（也可以叫其他名字）并进行设置。注意对相同项的重复设置，"),a("strong",[t._v("以最后一次为准")]),t._v("。")]),t._v(" "),a("p",[t._v("然后我们再写一个 "),a("code",[t._v("~/.bitme.gitconfig")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-ini extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ~/.bitme.gitconfig")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token section"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token section-name selector"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("email")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("email@bitme.fun")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("Yanhui Liu")]),t._v("\n")])])]),a("p",[t._v("就可以一劳永逸了。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("但是还没有完全一劳永逸，按照这个写法，每次得写两个 "),a("code",[t._v(".gitconfig")]),t._v("，而且这个格式还是有点麻烦。")]),t._v(" "),a("p",[t._v("但是万能的 Git 想到了这一点！")]),t._v(" "),a("p",[t._v("阅读文档可以发现，"),a("code",[t._v("git config")]),t._v(" 除了 "),a("code",[t._v("--system")]),t._v(" "),a("code",[t._v("--global")]),t._v(" "),a("code",[t._v("--local")]),t._v(" 以外，还支持 "),a("code",[t._v("--file")]),t._v(" 参数，可以指定一个文件来 读/写 配置。那直接把上面的代码变成脚本就 ok 了。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git-init.sh or git-init.ps1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email                      lyh543@outlook.com\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name                       lyh543\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global includeif.gitdir:bitme/.path    .bitme.gitconfig\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global pull.rebase                     "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global diff.submodule                  log\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global init.defaultbranch              master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global http.proxy                      http://127.0.0.1:17296\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global https.proxy                     http://127.0.0.1:17296\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global core.editor                     code --wait\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global core.autocrlf                   input\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --file .bitme.gitconfig user.email       email@bitme.fun\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --file .bitme.gitconfig user.name        Yanhui Liu\n")])])]),a("p",[t._v("最后就是脚本怎么办了。你可以尝试维护一个 repo 专门放各种脚本（公有、私有随意）。每次换新电脑 / 重装系统，挂完梯子第一件事就是把仓库 clone 下来，然后加到 PATH 里。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/lyh543/dev-tools",target:"_blank",rel:"noopener noreferrer"}},[t._v("偷偷放一个链接"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);