(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{463:function(t,s,a){"use strict";a.r(s);var n=a(3),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"库函数-轮子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#库函数-轮子"}},[t._v("#")]),t._v(" 库函数（轮子）")]),t._v(" "),a("h3",{attrs:{id:"include-cstring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#include-cstring"}},[t._v("#")]),t._v(" #include<cstring>")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("sscanf(const char \\__source, const char *__format, ...)")]),t._v("\n只能读一次")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("int strlen(char*)")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("int strcmp(const char *str1, const char *str2)")]),t._v("\n前者小，返回负数，大，返回正数")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("strcpy")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("char *strcat(char *str1, const char *str2)")]),t._v("\n将 str2 接到 str1 的结尾，用 *str2 替换 str1 末尾的 '\\0'\n返回 str1")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("char * strchr(char * string, char ch);")]),t._v("//寻找字符串")])])]),t._v(" "),a("h3",{attrs:{id:"include-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#include-string"}},[t._v("#")]),t._v(" #include<string>")]),t._v(" "),a("p",[t._v("<string>里的 std::string 与其大量函数。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<string>")])]),t._v("\nstring "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("c1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is a string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstring "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("c2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//c2="ccccc"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//string copy")]),t._v("\ns2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c1  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" c2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ns2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" c2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("注意区分 assignment 和 copy construction\n函数参数为 string 时"),a("strong",[t._v("一定要设为")]),t._v(" "),a("code",[t._v("const string &")])]),t._v(" "),a("h2",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")])])}),[],!1,null,null,null);s.default=r.exports}}]);