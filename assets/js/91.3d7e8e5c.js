(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{493:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("C 语言风格 I/O 请见"),a("RouterLink",{attrs:{to:"/posts/cpp/c-io/"}},[t._v("C I/O")]),t._v("。")],1),t._v(" "),a("p",[t._v("流：从某种 IO 设备上读入或写出的字符序列。")]),t._v(" "),a("p",[t._v("标准库中的 IO 对象，除了 "),a("code",[t._v("cin")]),t._v("、"),a("code",[t._v("cout")]),t._v("，还有：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("cerr")]),t._v("：用来输出警告、错误给程序的使用者（可以理解为第二块屏幕）")]),t._v(" "),a("li",[a("code",[t._v("clog")]),t._v("：用于产生 log。")])]),t._v(" "),a("h2",{attrs:{id:"cin-cout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cin-cout"}},[t._v("#")]),t._v(" cin, cout")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ignore endline when reading")]),t._v("\ncout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"istream-getline"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#istream-getline"}},[t._v("#")]),t._v(" istream::getline()")]),t._v(" "),a("p",[a("code",[t._v("getline()")]),t._v(" 会吃掉回车。")]),t._v(" "),a("p",[t._v("下面这种方法只能用于读 "),a("code",[t._v("char *")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" word"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getline")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ignore endline when storing")]),t._v("\n")])])]),a("p",[t._v("而下面这种方法，把 "),a("code",[t._v("cin")]),t._v(" 作为参数则只能用于读取 "),a("code",[t._v("string")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("string str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getline")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("需要注意，"),a("code",[t._v("cin.getline")]),t._v(" 是属于 "),a("code",[t._v("iostream")]),t._v(" 的，而 "),a("code",[t._v("getline(cin,str)")]),t._v(" 是属于 "),a("code",[t._v("string")]),t._v(" 的。")]),t._v(" "),a("h2",{attrs:{id:"istream-get"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#istream-get"}},[t._v("#")]),t._v(" istream::get()")]),t._v(" "),a("p",[a("code",[t._v("get()")]),t._v(" 有两个重载函数：")]),t._v(" "),a("ol",[a("li",[t._v("读一个字符")]),t._v(" "),a("li",[t._v("读一个字符串。")])]),t._v(" "),a("p",[t._v("如果无参数，则是读字符，类似于 "),a("code",[t._v("getchar()")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("上面两个都是读取一个字符，若可用则返回它，不可用时会对 "),a("code",[t._v("cin")]),t._v(" 设置 "),a("code",[t._v("failbit")]),t._v(" 和 "),a("code",[t._v("eofbit")]),t._v("。")]),t._v(" "),a("p",[t._v("如果带参数，可以读 "),a("code",[t._v("char")]),t._v(" `char *'。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("这是读一个字符串，并且可以指定分隔符（最后分隔符会被吃掉）。")]),t._v(" "),a("h3",{attrs:{id:"错误示范1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误示范1"}},[t._v("#")]),t._v(" 错误示范1")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getline")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("istream& operator>>")]),t._v(" 不会吃掉最后的空格！！！")]),t._v(" "),a("p",[t._v("紧接在读取数字等类型的 "),a("code",[t._v("cin")]),t._v(" 语句后，"),a("code",[t._v("getline")]),t._v(" 会读取其前一条语句留在输入法中的 "),a("code",[t._v('"\\n"')]),t._v("而结束。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("cin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("而上面这个方法则没有问题。")]),t._v(" "),a("p",[a("strong",[t._v("cin会过滤空白字符，而cin.getline()不会。")])]),t._v(" "),a("h3",{attrs:{id:"错误示范2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误示范2"}},[t._v("#")]),t._v(" 错误示范2")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("输入\"1a2\"时，当'a'不能输入到b时，输入流将关闭。\n需要"),a("code",[t._v("cout.flush()")])]),t._v(" "),a("h2",{attrs:{id:"设置输出格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置输出格式"}},[t._v("#")]),t._v(" 设置输出格式")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iomanip>")])]),t._v("\ncout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" fixed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//一定先 cout <<fixed, 某 OJ 上不写会出错")]),t._v("\ncout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setprecision")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置有效位数，四舍五入")]),t._v("\ncout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setw")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置对齐位数")]),t._v("\ncout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setiosflags")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ios"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置对齐方向")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resetiosflags")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ios"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" hex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setiosflags")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ios"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("showbase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hex十六进制，oct八进制，dec十进制")]),t._v("\n")])])]),a("h2",{attrs:{id:"二进制输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二进制输出"}},[t._v("#")]),t._v(" 二进制输出")]),t._v(" "),a("p",[t._v("函数|作用\n"),a("code",[t._v("basic_istream& read(char_type* s, std::streamsize count)")]),t._v("|以二进制形式输入（不看是不是字符，直接莽输入）\n"),a("code",[t._v("basic_ostream& write(const char_type* s, std::streamsize count)")]),t._v("|以二进制形式输出（失败时调用 "),a("code",[t._v("setstate(badbit)")]),t._v("）")]),t._v(" "),a("h2",{attrs:{id:"从文件输入、输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从文件输入、输出"}},[t._v("#")]),t._v(" 从文件输入、输出")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nofstream output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nifstream input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\noutput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"output.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ninput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"input.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ninput "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\noutput "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"fstream-的成员函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fstream-的成员函数"}},[t._v("#")]),t._v(" fstream 的成员函数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("函数")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("void open(filename, mode)")])]),t._v(" "),a("td",[t._v("打开文件，详见 "),a("a",{attrs:{href:"#open"}},[t._v("open()")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bool is_open() const")])]),t._v(" "),a("td",[t._v("判断是否打开")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("void close()")])]),t._v(" "),a("td",[t._v("关闭文件")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("get()")])]),t._v(" "),a("td",[t._v("读取一个字符或一行，详见 "),a("a",{attrs:{href:"#istreamget"}},[t._v("get()")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("getline()")])]),t._v(" "),a("td",[t._v("读取一行（不读回车），详见 "),a("a",{attrs:{href:"#istreamgetline"}},[t._v("getline()")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("basic_istream& read(str, std::streamsize count)")])]),t._v(" "),a("td",[t._v("以二进制形式输入（不看是不是字符，直接莽输入）")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("basic_ostream& write(str, std::streamsize count)")])]),t._v(" "),a("td",[t._v("以二进制形式输出（失败时调用 "),a("code",[t._v("setstate(badbit)")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bool eof()")])]),t._v(" "),a("td",[t._v("判断文件是否结束")])])])]),t._v(" "),a("h3",{attrs:{id:"open"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#open"}},[t._v("#")]),t._v(" open()")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" fstream"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ios_base"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("openmode mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" fstream"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ios_base"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("openmode mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("其中 mode 是位掩码类型（即可以用 "),a("code",[t._v("|")]),t._v(" 进行叠加）：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("常量")]),t._v(" "),a("th",[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("app")])]),t._v(" "),a("td",[t._v("每次写入前寻位到流结尾（输出补充在文末）")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("binary")])]),t._v(" "),a("td",[t._v("以二进制模式打开")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("in")])]),t._v(" "),a("td",[t._v("为读打开")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("out")])]),t._v(" "),a("td",[t._v("为写打开")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("trunc")])]),t._v(" "),a("td",[t._v("在打开时舍弃流的内容（若存在文件则覆盖）")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("ate")])]),t._v(" "),a("td",[t._v("打开后立即寻位到流结尾（初始位置：文件末）")])])])]),t._v(" "),a("p",[t._v("mode 的默认参数："),a("br"),t._v("\nfstream："),a("code",[t._v("ios_base::in | ios_base::out")]),t._v("\nifstream："),a("code",[t._v("ios_base::in | ios_base::trunc")]),t._v("\nofstream："),a("code",[t._v("ios_base::out")])]),t._v(" "),a("h3",{attrs:{id:"文件指针位置相关操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件指针位置相关操作"}},[t._v("#")]),t._v(" 文件指针位置相关操作")]),t._v(" "),a("p",[t._v("以下 "),a("code",[t._v("p")]),t._v(" 代表 "),a("code",[t._v("put")]),t._v("，对输出流操作；"),a("code",[t._v("g")]),t._v(" 代表 "),a("code",[t._v("get")]),t._v("，对输入流操作。")]),t._v(" "),a("p",[t._v("文件指针实际上就是一个标记字节的数字，起始为 "),a("code",[t._v("0")]),t._v("。")]),t._v(" "),a("p",[t._v("用成员函数 "),a("code",[t._v("tellg()/tellp()")]),t._v(" 获取当前位置，返回 "),a("code",[t._v("streampos")]),t._v("（实际上是一个整型，在 VS 2017 x86/x64 上范围和 "),a("code",[t._v("signed long long")]),t._v(" 相同）。")]),t._v(" "),a("p",[t._v("修改的成员函数有绝对和相对的。下仅以 "),a("code",[t._v("seekp()")]),t._v(" 作示范，"),a("code",[t._v("seekg()")]),t._v(" 用法相同。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("istream"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("seekg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("streampos pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//(1)")]),t._v("\nistream"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("seekg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("streamoff off"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ios_base"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("seekdir way"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//(2)")]),t._v("\n")])])]),a("p",[t._v("(1) 修改到绝对指针，(2) 修改到相对指针，"),a("code",[t._v("off")]),t._v(" (offset) 为位移量（可以为负），"),a("code",[t._v("way")]),t._v(" 为位移的正负（"),a("code",[t._v("way > 0")]),t._v(" 时往流的末尾，"),a("code",[t._v("way == 0")]),t._v(" 时往流的开头，建议用 "),a("code",[t._v("true/false")]),t._v("，但既然 "),a("code",[t._v("off")]),t._v(" 可以为负，感觉就很鸡肋了）。")]),t._v(" "),a("h2",{attrs:{id:"string-和-iostream-的关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-和-iostream-的关系"}},[t._v("#")]),t._v(" string 和 iostream 的关系")]),t._v(" "),a("p",[t._v("参见这篇"),a("RouterLink",{attrs:{to:"/posts/cpp/string/#string-和-iostream-的关系"}},[t._v("博客")]),t._v("。")],1),t._v(" "),a("h3",{attrs:{id:"重载-iostream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重载-iostream"}},[t._v("#")]),t._v(" 重载 iostream")]),t._v(" "),a("blockquote",[a("p",[t._v("参考博客: http://blog.csdn.net/caroline_wendy/article/details/15336063")])]),t._v(" "),a("h3",{attrs:{id:"_1-输出操作符-ostream-重载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-输出操作符-ostream-重载"}},[t._v("#")]),t._v(" 1. 输出操作符(ostream)重载")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("ostream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("ostream"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ClassA"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("ostream需要修改，不能复制，所以应该为"),a("strong",[t._v("非常量引用类型(nonconst &)")]),t._v("；输出类不需要修改, 应该为"),a("strong",[t._v("常量引用类型(const &)")]),t._v("；")]),t._v(" "),a("p",[t._v("函数有可能使用内部的私有成员，需要定义为"),a("strong",[t._v("友元(friend)")]),t._v("；")]),t._v(" "),a("p",[t._v("重载操作符应该为非类成员函数(nonmember function)。如果为类成员函数，则也必须为标准库成员函数，显然无法完成。")]),t._v(" "),a("p",[t._v("注意函数不要有格式信息(minimal formatting)，为了和标准输入操作符进行统一。")]),t._v(" "),a("h3",{attrs:{id:"_2-输入操作符-istream-重载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-输入操作符-istream-重载"}},[t._v("#")]),t._v(" 2. 输入操作符(istream)重载")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("istream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("istream"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" is"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ClassA"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("基本同输出操作符；")]),t._v(" "),a("p",[t._v("参数都为 "),a("code",[t._v("non-const")]),t._v("（都需要修改)；")]),t._v(" "),a("p",[t._v("操作符函数应该包括错误恢复(error recovery)，保证输入错误时，不会产生未知错误；")]),t._v(" "),a("p",[t._v("可以增加 I/O 条件状态(condition state)进行判断，输入错误原因。")]),t._v(" "),a("h2",{attrs:{id:"刷新输入缓冲区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#刷新输入缓冲区"}},[t._v("#")]),t._v(" 刷新输入缓冲区")]),t._v(" "),a("p",[t._v("在读 "),a("code",[t._v("int")]),t._v(" 的时候如果读到了非数字字符，输入流就会被关闭（输入流会变成错误状态），无法继续读入。")]),t._v(" "),a("p",[t._v("解决的办法就是重新打开输入流（将错误状态更改为有效状态），顺便可能需要忽略掉一些字符。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("cin.clear()")]),t._v(" 是将错误状态更改为有效状态\n"),a("code",[t._v("cin.sync()")]),t._v(" 是清除缓冲区中的未读信息\n"),a("code",[t._v("cin.ignore()")]),t._v(" 是忽略缓冲区中指定个数的字符，还可以指定忽略的结束符")])]),t._v(" "),a("p",[t._v("也就是说，当我们想要刷新输入流并忽略掉已经在缓冲区的字符时，我们可以使用以下方法：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("cin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("但是，在 Visual Studio 2019 上，他貌似并没有清楚缓冲区的未读信息。")]),t._v(" "),a("p",[t._v("在 "),a("a",{attrs:{href:"https://stackoverflow.com/a/10585440/12208030",target:"_blank",rel:"noopener noreferrer"}},[t._v("Stack Overflow"),a("OutboundLink")],1),t._v(" 上提到了这么一句，")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("cin.sync")]),t._v(" discards all unread characters from the input buffer. "),a("strong",[t._v("However, it is not guaranteed to do so in each implementation.")]),t._v(" Therefore, "),a("code",[t._v("ignore")]),t._v(" is a better choice if you want consistency.")])]),t._v(" "),a("p",[t._v("大意是， "),a("code",[t._v("cin.sync")]),t._v(" 在各个平台上实现的方法可能不一样，比如这里在 Visual Studio 2019 上就不能用 "),a("code",[t._v("sync")]),t._v(" 来清楚缓冲区的未读信息。可以改为如下：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("cin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ignore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这样可以忽略掉缓冲区的一行字符。")]),t._v(" "),a("p",[t._v("注意 "),a("code",[t._v("ignore")]),t._v(" 还可以忽略还没有输入的字符，如以下程序：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("char ch;\ncin.igore(10);\nwhile (cin >> ch)\n    cout << ch;\n")])])]),a("p",[t._v("运行程序，输入 "),a("code",[t._v("qwertyuiopasdf")]),t._v("，会输出 "),a("code",[t._v("asdf")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"命令行程序控制输入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令行程序控制输入"}},[t._v("#")]),t._v(" 命令行程序控制输入")]),t._v(" "),a("p",[t._v("命令行防止错误的输入真是令人头疼的问题了。一般有两个方案：")]),t._v(" "),a("ol",[a("li",[t._v("只使用 "),a("code",[t._v("cin.getline()")]),t._v(" 读入，一行一行的读")]),t._v(" "),a("li",[t._v("读错了以后马上刷新，按上面一个标题的办法")])])])}),[],!1,null,null,null);s.default=e.exports}}]);