(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{558:function(t,a,s){"use strict";s.r(a);var n=s(3),o=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"系列目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系列目录"}},[t._v("#")]),t._v(" 系列目录")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/_posts/java/spring-boot-rest-api-tutorial/1-hello-world/"}},[t._v("搭建 Spring Boot REST API 项目 (1) -- Hello World")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/_posts/java/spring-boot-rest-api-tutorial/2-database-and-test/"}},[t._v("搭建 Spring Boot REST API 项目 (2) -- 数据库和测试")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/_posts/java/spring-boot-rest-api-tutorial/3-request-and-response/"}},[t._v("搭建 Spring Boot REST API 项目 (3) -- 请求和应答")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/_posts/java/spring-boot-rest-api-tutorial/4-validation/"}},[t._v("搭建 Spring Boot REST API 项目 (4) -- 字段校验")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/_posts/java/spring-boot-rest-api-tutorial/5-serialization/"}},[t._v("搭建 Spring Boot REST API 项目 (5) -- 序列化和反序列化")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/_posts/java/spring-boot-rest-api-tutorial/6-authentication-and-security/"}},[t._v("搭建 Spring Boot REST API 项目 (6) -- 认证和安全")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/_posts/java/spring-boot-rest-api-tutorial/7-docs-generator/"}},[t._v("搭建 Spring Boot REST API 项目 (7) -- 自动生成 REST API 文档")])],1)]),t._v(" "),s("h2",{attrs:{id:"校验器-validator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#校验器-validator"}},[t._v("#")]),t._v(" 校验器 (validator)")]),t._v(" "),s("p",[t._v("上面可以看到，Java 能自动将 json 反序列化为 User。但我们可能还需要检查每一个字段的合法性，如注册时要求 "),s("code",[t._v("email")]),t._v(" 不为空且唯一；"),s("code",[t._v("name")]),t._v(" 不为空；"),s("code",[t._v("password")]),t._v(" 不少于 6 位。")]),t._v(" "),s("h3",{attrs:{id:"使用-javax-validaton"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-javax-validaton"}},[t._v("#")]),t._v(" 使用 javax.validaton")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("javax.validation"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("validation-api"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2.0.1.Final"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Null")]),t._v(" 被注释的元素必须为 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NotNull")]),t._v(" 被注释的元素必须不为 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AssertTrue")]),t._v(" 被注释的元素必须为 "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AssertFalse")]),t._v(" 被注释的元素必须为 "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 被注释的元素必须是一个数字，其值必须大于等于指定的最小值\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 被注释的元素必须是一个数字，其值必须小于等于指定的最大值\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@DecimalMin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 被注释的元素必须是一个数字，其值必须大于等于指定的最小值\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@DecimalMax")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 被注释的元素必须是一个数字，其值必须小于等于指定的最大值\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" min"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 被注释的元素的大小必须在指定的范围内\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Digits")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fraction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 被注释的元素必须是一个数字，其值必须在可接受的范围内\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Past")]),t._v(" 被注释的元素必须是一个过去的日期\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Future")]),t._v(" 被注释的元素必须是一个将来的日期\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("flag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 被注释的元素必须符合指定的正则表达式\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hibernate")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Validator")]),t._v("提供的校验注解：\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NotBlank")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 验证字符串非"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("，且长度必须大于"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Email")]),t._v(" 被注释的元素必须是电子邮箱地址\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("min"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("max"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 被注释的字符串的大小必须在指定的范围内\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NotEmpty")]),t._v(" 被注释的字符串的必须非空\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("min"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("max"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 被注释的元素必须在合适的范围内\t\n")])])])])}),[],!1,null,null,null);a.default=o.exports}}]);